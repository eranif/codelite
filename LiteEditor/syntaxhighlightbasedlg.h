//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// Copyright            : (C) 2015 Eran Ifrah
// File name            : syntaxhighlightbasedlg.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: SyntaxHighlightBaseDlg.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_LITEEDITOR_SYNTAXHIGHLIGHTBASEDLG_BASE_CLASSES_H
#define CODELITE_LITEEDITOR_SYNTAXHIGHLIGHTBASEDLG_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <map>
#include <wx/menu.h>
#include <wx/toolbar.h>
#include <wx/notebook.h>
#include <wx/panel.h>
#include <wx/imaglist.h>
#include <wx/stattext.h>
#include <wx/fontpicker.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/clrpicker.h>
#include <wx/stc/stc.h>
#include <wx/listbox.h>
#include <wx/textctrl.h>
#include <wx/checkbox.h>
#include <wx/statline.h>
#include <wx/button.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

class SyntaxHighlightBaseDlg : public wxDialog
{
public:
    enum {
        ID_EXPORT_ALL = 1001,
        ID_EXPORT_SELECTIVE = 1002,
        ID_MENU_ECLIPSE_WEBSITE = 1003,
        ID_TOOL_IMPORT_ECLIPSE_THEME = 1004,
    };
protected:
    wxAuiToolBar* m_auibar;
    std::map<int, wxMenu*> m_dropdownMenus;
    wxMenu* m_menu142;
    wxMenuItem* m_menuItemExportAll;
    wxMenuItem* m_menuItemExportSelective;
    wxMenu* m_menu151;
    wxMenuItem* m_menuItem153;
    wxNotebook* m_notebook76;
    wxPanel* m_panelGlobalColours;
    wxStaticText* m_staticText159;
    wxFontPickerCtrl* m_fontPickerGlobal;
    wxStaticText* m_staticText155;
    wxChoice* m_choiceGlobalTheme;
    wxStaticText* m_staticText91;
    wxColourPickerCtrl* m_colourPickerOutputPanesFgColour;
    wxStaticText* m_staticText911;
    wxColourPickerCtrl* m_colourPickerOutputPanesBgColour;
    wxStaticText* m_staticText165;
    wxStyledTextCtrl* m_stcPreview;
    wxPanel* m_panelSyntaxHighlight;
    wxListBox* m_listBox;
    wxPanel* m_panel25;
    wxNotebook* m_notebook2;
    wxPanel* m_panelGlobalSettings;
    wxStaticText* m_staticText70;
    wxChoice* m_choiceLexerThemes;
    wxStaticText* m_staticText6;
    wxFontPickerCtrl* m_globalFontPicker;
    wxStaticText* m_staticText7;
    wxColourPickerCtrl* m_globalBgColourPicker;
    wxStaticText* m_staticText8;
    wxTextCtrl* m_fileSpec;
    wxPanel* m_panelCustomize;
    wxListBox* m_properties;
    wxStaticText* m_staticText2;
    wxFontPickerCtrl* m_fontPicker;
    wxStaticText* m_staticText3;
    wxColourPickerCtrl* m_colourPicker;
    wxStaticText* m_staticText4;
    wxColourPickerCtrl* m_bgColourPicker;
    wxCheckBox* m_eolFilled;
    wxCheckBox* m_styleWithinPreProcessor;
    wxStaticLine* m_staticline1;
    wxStaticText* m_staticText1;
    wxButton* m_button5;
    wxButton* m_button6;
    wxButton* m_button7;
    wxButton* m_button8;
    wxButton* m_button9;
    wxPanel* m_panelTextSelection;
    wxStaticText* m_staticText9;
    wxColourPickerCtrl* m_colourPickerSelTextBgColour;
    wxStaticText* m_staticText94;
    wxCheckBox* m_checkBoxCustomSelectionFgColour;
    wxStaticText* m_staticText84;
    wxColourPickerCtrl* m_colourPickerSelTextFgColour;
    wxStdDialogButtonSizer* m_stdBtnSizer10;
    wxButton* m_buttonOk;
    wxButton* m_buttonCancel;
    wxButton* m_buttonApply;

protected:
    virtual void OnNewTheme(wxCommandEvent& event) { event.Skip(); }
    virtual void OnToolExportAll(wxAuiToolBarEvent& event) { event.Skip(); }
    virtual void OnExportAll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnExportSelective(wxCommandEvent& event) { event.Skip(); }
    virtual void OnImport(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRestoreDefaults(wxCommandEvent& event) { event.Skip(); }
    virtual void OnImportEclipseTheme(wxAuiToolBarEvent& event) { event.Skip(); }
    virtual void OnLoadEclipseThemeWebsite(wxCommandEvent& event) { event.Skip(); }
    virtual void OnGlobalFontSelected(wxFontPickerEvent& event) { event.Skip(); }
    virtual void OnGlobalThemeSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOutputViewColourChanged(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnLexerSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnThemeChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFontChanged(wxFontPickerEvent& event) { event.Skip(); }
    virtual void OnColourChanged(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnText(wxCommandEvent& event) { event.Skip(); }
    virtual void OnItemSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEolFilled(wxCommandEvent& event) { event.Skip(); }
    virtual void OnStyleWithinPreprocessor(wxCommandEvent& event) { event.Skip(); }
    virtual void OnStyleWithingPreProcessorUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton0(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton1(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton2(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton3(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton4(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSelTextChanged(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnUseCustomFgTextColour(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTextSelFgUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSelTextFgChanged(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnButtonOK(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonCancel(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonApply(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonApplyUI(wxUpdateUIEvent& event) { event.Skip(); }

public:

    virtual void ShowAuiToolMenu(wxAuiToolBarEvent& event);
    wxAuiToolBar* GetAuibar() { return m_auibar; }
    wxStaticText* GetStaticText159() { return m_staticText159; }
    wxFontPickerCtrl* GetFontPickerGlobal() { return m_fontPickerGlobal; }
    wxStaticText* GetStaticText155() { return m_staticText155; }
    wxChoice* GetChoiceGlobalTheme() { return m_choiceGlobalTheme; }
    wxStaticText* GetStaticText91() { return m_staticText91; }
    wxColourPickerCtrl* GetColourPickerOutputPanesFgColour() { return m_colourPickerOutputPanesFgColour; }
    wxStaticText* GetStaticText911() { return m_staticText911; }
    wxColourPickerCtrl* GetColourPickerOutputPanesBgColour() { return m_colourPickerOutputPanesBgColour; }
    wxStaticText* GetStaticText165() { return m_staticText165; }
    wxStyledTextCtrl* GetStcPreview() { return m_stcPreview; }
    wxPanel* GetPanelGlobalColours() { return m_panelGlobalColours; }
    wxListBox* GetListBox() { return m_listBox; }
    wxStaticText* GetStaticText70() { return m_staticText70; }
    wxChoice* GetChoiceLexerThemes() { return m_choiceLexerThemes; }
    wxStaticText* GetStaticText6() { return m_staticText6; }
    wxFontPickerCtrl* GetGlobalFontPicker() { return m_globalFontPicker; }
    wxStaticText* GetStaticText7() { return m_staticText7; }
    wxColourPickerCtrl* GetGlobalBgColourPicker() { return m_globalBgColourPicker; }
    wxStaticText* GetStaticText8() { return m_staticText8; }
    wxTextCtrl* GetFileSpec() { return m_fileSpec; }
    wxPanel* GetPanelGlobalSettings() { return m_panelGlobalSettings; }
    wxListBox* GetProperties() { return m_properties; }
    wxStaticText* GetStaticText2() { return m_staticText2; }
    wxFontPickerCtrl* GetFontPicker() { return m_fontPicker; }
    wxStaticText* GetStaticText3() { return m_staticText3; }
    wxColourPickerCtrl* GetColourPicker() { return m_colourPicker; }
    wxStaticText* GetStaticText4() { return m_staticText4; }
    wxColourPickerCtrl* GetBgColourPicker() { return m_bgColourPicker; }
    wxCheckBox* GetEolFilled() { return m_eolFilled; }
    wxCheckBox* GetStyleWithinPreProcessor() { return m_styleWithinPreProcessor; }
    wxStaticLine* GetStaticline1() { return m_staticline1; }
    wxStaticText* GetStaticText1() { return m_staticText1; }
    wxButton* GetButton5() { return m_button5; }
    wxButton* GetButton6() { return m_button6; }
    wxButton* GetButton7() { return m_button7; }
    wxButton* GetButton8() { return m_button8; }
    wxButton* GetButton9() { return m_button9; }
    wxPanel* GetPanelCustomize() { return m_panelCustomize; }
    wxStaticText* GetStaticText9() { return m_staticText9; }
    wxColourPickerCtrl* GetColourPickerSelTextBgColour() { return m_colourPickerSelTextBgColour; }
    wxStaticText* GetStaticText94() { return m_staticText94; }
    wxCheckBox* GetCheckBoxCustomSelectionFgColour() { return m_checkBoxCustomSelectionFgColour; }
    wxStaticText* GetStaticText84() { return m_staticText84; }
    wxColourPickerCtrl* GetColourPickerSelTextFgColour() { return m_colourPickerSelTextFgColour; }
    wxPanel* GetPanelTextSelection() { return m_panelTextSelection; }
    wxNotebook* GetNotebook2() { return m_notebook2; }
    wxPanel* GetPanel25() { return m_panel25; }
    wxPanel* GetPanelSyntaxHighlight() { return m_panelSyntaxHighlight; }
    wxNotebook* GetNotebook76() { return m_notebook76; }
    SyntaxHighlightBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Colours and Fonts"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~SyntaxHighlightBaseDlg();
};


class NewThemeDialogBase : public wxDialog
{
protected:
    wxStaticText* m_staticText127;
    wxTextCtrl* m_textCtrlName;
    wxStaticText* m_staticText131;
    wxChoice* m_choiceLanguage;
    wxStaticText* m_staticText135;
    wxChoice* m_choiceBaseTheme;
    wxStdDialogButtonSizer* m_stdBtnSizer117;
    wxButton* m_buttonOK;
    wxButton* m_buttonCancel;

protected:
    virtual void OnLexerSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOkUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText127() { return m_staticText127; }
    wxTextCtrl* GetTextCtrlName() { return m_textCtrlName; }
    wxStaticText* GetStaticText131() { return m_staticText131; }
    wxChoice* GetChoiceLanguage() { return m_choiceLanguage; }
    wxStaticText* GetStaticText135() { return m_staticText135; }
    wxChoice* GetChoiceBaseTheme() { return m_choiceBaseTheme; }
    NewThemeDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New Theme"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NewThemeDialogBase();
};

#endif
