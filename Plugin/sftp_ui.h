//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// Copyright            : (C) 2015 Eran Ifrah
// File name            : sftp_ui.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: sftp_ui.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_PLUGIN_SFTP_UI_BASE_CLASSES_H
#define CODELITE_PLUGIN_SFTP_UI_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/dataview.h>
#include <wx/button.h>
#include <wx/infobar.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/gbsizer.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/toolbar.h>
#include "sftptreemodel.h"
#include <wx/frame.h>
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <map>
#include <wx/menu.h>
#include <wx/panel.h>
#include <wx/stc/stc.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif
#include "codelite_exports.h"

class WXDLLIMPEXP_SDK SSHAccountManagerDlgBase : public wxDialog
{
protected:
    wxDataViewListCtrl* m_dvListCtrlAccounts;
    wxButton* m_buttonNew;
    wxButton* m_buttonDelete;
    wxButton* m_buttonEdit;
    wxButton* m_button6;
    wxButton* m_button8;

protected:
    virtual void OnItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnAddAccount(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteAccount(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteAccountUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEditAccountUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEditAccount(wxCommandEvent& event) { event.Skip(); }

public:
    wxDataViewListCtrl* GetDvListCtrlAccounts() { return m_dvListCtrlAccounts; }
    wxButton* GetButtonNew() { return m_buttonNew; }
    wxButton* GetButtonDelete() { return m_buttonDelete; }
    wxButton* GetButtonEdit() { return m_buttonEdit; }
    wxButton* GetButton6() { return m_button6; }
    wxButton* GetButton8() { return m_button8; }
    SSHAccountManagerDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("SSH Account Manager"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~SSHAccountManagerDlgBase();
};


class WXDLLIMPEXP_SDK AddSSHAcountDlgBase : public wxDialog
{
protected:
    wxInfoBar* m_infobar;
    wxStaticText* m_staticText98;
    wxTextCtrl* m_textCtrlName;
    wxStaticText* m_staticHostIp;
    wxTextCtrl* m_textCtrlHost;
    wxStaticText* m_staticText45;
    wxTextCtrl* m_textCtrlPort;
    wxStaticText* m_staticText37;
    wxTextCtrl* m_textCtrlUsername;
    wxStaticText* m_staticText41;
    wxTextCtrl* m_textCtrlPassword;
    wxStaticText* m_staticText110;
    wxTextCtrl* m_textCtrlHomeFolder;
    wxButton* m_button51;
    wxButton* m_button27;
    wxButton* m_button25;

protected:
    virtual void OnHomeFolderUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTestConnection(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTestConnectionUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxInfoBar* GetInfobar() { return m_infobar; }
    wxStaticText* GetStaticText98() { return m_staticText98; }
    wxTextCtrl* GetTextCtrlName() { return m_textCtrlName; }
    wxStaticText* GetStaticHostIp() { return m_staticHostIp; }
    wxTextCtrl* GetTextCtrlHost() { return m_textCtrlHost; }
    wxStaticText* GetStaticText45() { return m_staticText45; }
    wxTextCtrl* GetTextCtrlPort() { return m_textCtrlPort; }
    wxStaticText* GetStaticText37() { return m_staticText37; }
    wxTextCtrl* GetTextCtrlUsername() { return m_textCtrlUsername; }
    wxStaticText* GetStaticText41() { return m_staticText41; }
    wxTextCtrl* GetTextCtrlPassword() { return m_textCtrlPassword; }
    wxStaticText* GetStaticText110() { return m_staticText110; }
    wxTextCtrl* GetTextCtrlHomeFolder() { return m_textCtrlHomeFolder; }
    wxButton* GetButton51() { return m_button51; }
    wxButton* GetButton27() { return m_button27; }
    wxButton* GetButton25() { return m_button25; }
    AddSSHAcountDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Add Account"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~AddSSHAcountDlgBase();
};


class WXDLLIMPEXP_SDK SFTPBrowserBaseDlg : public wxDialog
{
public:
    enum {
        ID_CD_UP = 1001,
        ID_SSH_ACCOUNT_MANAGER = 1002,
    };
protected:
    wxStaticText* m_staticText66;
    wxTextCtrl* m_textCtrlRemoteFolder;
    wxButton* m_buttonRefresh;
    wxStaticText* m_staticText82;
    wxChoice* m_choiceAccount;
    wxToolBar* m_toolbar;
    wxDataViewCtrl* m_dataview;
    wxObjectDataPtr<SFTPTreeModel> m_dataviewModel;

    wxTextCtrl* m_textCtrlInlineSearch;
    wxButton* m_button59;
    wxButton* m_button61;

protected:
    virtual void OnTextEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRefresh(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRefreshUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCdUp(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCdUpUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSSHAccountManager(wxCommandEvent& event) { event.Skip(); }
    virtual void OnItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnItemSelected(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnTextUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFocusLost(wxFocusEvent& event) { event.Skip(); }
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText66() { return m_staticText66; }
    wxTextCtrl* GetTextCtrlRemoteFolder() { return m_textCtrlRemoteFolder; }
    wxButton* GetButtonRefresh() { return m_buttonRefresh; }
    wxStaticText* GetStaticText82() { return m_staticText82; }
    wxChoice* GetChoiceAccount() { return m_choiceAccount; }
    wxToolBar* GetToolbar() { return m_toolbar; }
    wxDataViewCtrl* GetDataview() { return m_dataview; }
    wxTextCtrl* GetTextCtrlInlineSearch() { return m_textCtrlInlineSearch; }
    wxButton* GetButton59() { return m_button59; }
    wxButton* GetButton61() { return m_button61; }
    SFTPBrowserBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("SFTP Browser"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~SFTPBrowserBaseDlg();
};


class WXDLLIMPEXP_SDK SSHTerminalBase : public wxFrame
{
protected:
    wxAuiToolBar* m_auibar135;
    wxPanel* m_panel126;
    wxStyledTextCtrl* m_stcOutput;
    wxTextCtrl* m_textCtrl1;

protected:
    virtual void OnClear(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSendCommand(wxCommandEvent& event) { event.Skip(); }

public:
    wxAuiToolBar* GetAuibar135() { return m_auibar135; }
    wxStyledTextCtrl* GetStcOutput() { return m_stcOutput; }
    wxTextCtrl* GetTextCtrl1() { return m_textCtrl1; }
    wxPanel* GetPanel126() { return m_panel126; }
    SSHTerminalBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("SSHTerminalBase"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_FRAME_STYLE);
    virtual ~SSHTerminalBase();
};

#endif
