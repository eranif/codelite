//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: sftp_ui.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CODELITE_PLUGIN_SFTP_UI_BASE_CLASSES_H
#define _CODELITE_PLUGIN_SFTP_UI_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/dataview.h>
#include "clThemedListCtrl.h"
#include <wx/button.h>
#include <wx/infobar.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/panel.h>
#include <wx/toolbar.h>
#include "clToolBar.h"
#include <wx/choice.h>
#include <wx/arrstr.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

#include "codelite_exports.h"
// clang-format on

class WXDLLIMPEXP_SDK SSHAccountManagerDlgBase : public wxDialog
{
protected:
    clThemedListCtrl* m_dvListCtrl;
    wxButton* m_buttonNew;
    wxButton* m_buttonDelete;
    wxButton* m_buttonEdit;
    wxButton* m_button6;
    wxButton* m_button8;

protected:
    virtual void OnItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnAddAccount(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteAccount(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteAccountUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEditAccountUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEditAccount(wxCommandEvent& event) { event.Skip(); }

public:
    clThemedListCtrl* GetDvListCtrl() { return m_dvListCtrl; }
    wxButton* GetButtonNew() { return m_buttonNew; }
    wxButton* GetButtonDelete() { return m_buttonDelete; }
    wxButton* GetButtonEdit() { return m_buttonEdit; }
    wxButton* GetButton6() { return m_button6; }
    wxButton* GetButton8() { return m_button8; }
    SSHAccountManagerDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY,
                             const wxString& title = _("SSH Account Manager"), const wxPoint& pos = wxDefaultPosition,
                             const wxSize& size = wxSize(-1, -1),
                             long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~SSHAccountManagerDlgBase();
};

class WXDLLIMPEXP_SDK AddSSHAcountDlgBase : public wxDialog
{
protected:
    wxInfoBar* m_infobar;
    wxStaticText* m_staticText98;
    wxTextCtrl* m_textCtrlName;
    wxStaticText* m_staticHostIp;
    wxTextCtrl* m_textCtrlHost;
    wxStaticText* m_staticText45;
    wxTextCtrl* m_textCtrlPort;
    wxStaticText* m_staticText37;
    wxTextCtrl* m_textCtrlUsername;
    wxStaticText* m_staticText41;
    wxTextCtrl* m_textCtrlPassword;
    wxStaticText* m_staticText110;
    wxTextCtrl* m_textCtrlHomeFolder;
    wxButton* m_button51;
    wxButton* m_button27;
    wxButton* m_button25;

protected:
    virtual void OnHomeFolderUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTestConnection(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTestConnectionUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxInfoBar* GetInfobar() { return m_infobar; }
    wxStaticText* GetStaticText98() { return m_staticText98; }
    wxTextCtrl* GetTextCtrlName() { return m_textCtrlName; }
    wxStaticText* GetStaticHostIp() { return m_staticHostIp; }
    wxTextCtrl* GetTextCtrlHost() { return m_textCtrlHost; }
    wxStaticText* GetStaticText45() { return m_staticText45; }
    wxTextCtrl* GetTextCtrlPort() { return m_textCtrlPort; }
    wxStaticText* GetStaticText37() { return m_staticText37; }
    wxTextCtrl* GetTextCtrlUsername() { return m_textCtrlUsername; }
    wxStaticText* GetStaticText41() { return m_staticText41; }
    wxTextCtrl* GetTextCtrlPassword() { return m_textCtrlPassword; }
    wxStaticText* GetStaticText110() { return m_staticText110; }
    wxTextCtrl* GetTextCtrlHomeFolder() { return m_textCtrlHomeFolder; }
    wxButton* GetButton51() { return m_button51; }
    wxButton* GetButton27() { return m_button27; }
    wxButton* GetButton25() { return m_button25; }
    AddSSHAcountDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Add Account"),
                        const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1),
                        long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~AddSSHAcountDlgBase();
};

class WXDLLIMPEXP_SDK SFTPBrowserBaseDlg : public wxDialog
{
protected:
    wxPanel* m_panel149;
    clToolBar* m_toolbar;
    wxStaticText* m_staticText82;
    wxChoice* m_choiceAccount;
    wxStaticText* m_staticText66;
    wxTextCtrl* m_textCtrlRemoteFolder;
    wxButton* m_buttonRefresh;
    clThemedListCtrl* m_dataview;
    wxTextCtrl* m_textCtrlInlineSearch;
    wxButton* m_button59;
    wxButton* m_button61;

protected:
    virtual void OnTextEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRefresh(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRefreshUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnItemSelected(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnTextUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFocusLost(wxFocusEvent& event) { event.Skip(); }
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    clToolBar* GetToolbar() { return m_toolbar; }
    wxStaticText* GetStaticText82() { return m_staticText82; }
    wxChoice* GetChoiceAccount() { return m_choiceAccount; }
    wxStaticText* GetStaticText66() { return m_staticText66; }
    wxTextCtrl* GetTextCtrlRemoteFolder() { return m_textCtrlRemoteFolder; }
    wxButton* GetButtonRefresh() { return m_buttonRefresh; }
    clThemedListCtrl* GetDataview() { return m_dataview; }
    wxTextCtrl* GetTextCtrlInlineSearch() { return m_textCtrlInlineSearch; }
    wxButton* GetButton59() { return m_button59; }
    wxButton* GetButton61() { return m_button61; }
    wxPanel* GetPanel149() { return m_panel149; }
    SFTPBrowserBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("SFTP Browser"),
                       const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1),
                       long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~SFTPBrowserBaseDlg();
};

#endif
