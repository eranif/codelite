//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// Copyright            : (C) 2015 The CodeLite Team
// File name            : newclassbasedlg.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: newclasswizard.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_GIZMOS_NEWCLASSWIZARD_BASE_CLASSES_H
#define CODELITE_GIZMOS_NEWCLASSWIZARD_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/button.h>
#include <wx/checkbox.h>
#include <wx/collpane.h>
#include <wx/listctrl.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

class NewClassBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_staticText1;
    wxTextCtrl* m_textClassName;
    wxStaticText* m_staticText9;
    wxStaticText* m_staticText37;
    wxTextCtrl* m_textCtrlFileName;
    wxStaticText* m_staticTextNamespace;
    wxTextCtrl* m_textCtrlNamespace;
    wxButton* m_buttonBrowseNamespaces;
    wxStaticText* m_staticText6;
    wxTextCtrl* m_textCtrlBlockGuard;
    wxStaticText* m_staticText4;
    wxTextCtrl* m_textCtrlVD;
    wxButton* m_buttonSelectVD;
    wxStaticText* m_staticText2;
    wxTextCtrl* m_textCtrlGenFilePath;
    wxButton* m_buttonBrowseFolder;
    wxStaticText* m_staticText8;
    wxCheckBox* m_checkBoxInline;
    wxCheckBox* m_checkBoxHpp;
    wxCheckBox* m_checkBoxPragmaOnce;
    wxCollapsiblePane* m_collPane2;
    wxStaticText* m_staticText7;
    wxListCtrl* m_listCtrl1;
    wxButton* m_buttonAddInheritance;
    wxButton* m_buttonDelInheritance;
    wxCheckBox* m_checkBoxCopyable;
    wxCheckBox* m_checkBoxImplVirtual;
    wxCheckBox* m_checkBoxSingleton;
    wxCheckBox* m_checkBoxImplPureVirtual;
    wxCheckBox* m_checkBoxVirtualDtor;
    wxStdDialogButtonSizer* m_stdBtnSizer30;
    wxButton* m_button32;
    wxButton* m_button34;

protected:
    virtual void OnTextEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBrowseNamespace(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBlockGuardUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnBrowseVD(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBrowseFolder(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCheckInline(wxCommandEvent& event) { event.Skip(); }
    virtual void OnListItemActivated(wxListEvent& event) { event.Skip(); }
    virtual void OnListItemDeSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnListItemSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnButtonAdd(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonDelete(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonDeleteUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCheckImpleAllVirtualFunctions(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonOK(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText1() { return m_staticText1; }
    wxTextCtrl* GetTextClassName() { return m_textClassName; }
    wxStaticText* GetStaticText9() { return m_staticText9; }
    wxStaticText* GetStaticText37() { return m_staticText37; }
    wxTextCtrl* GetTextCtrlFileName() { return m_textCtrlFileName; }
    wxStaticText* GetStaticTextNamespace() { return m_staticTextNamespace; }
    wxTextCtrl* GetTextCtrlNamespace() { return m_textCtrlNamespace; }
    wxButton* GetButtonBrowseNamespaces() { return m_buttonBrowseNamespaces; }
    wxStaticText* GetStaticText6() { return m_staticText6; }
    wxTextCtrl* GetTextCtrlBlockGuard() { return m_textCtrlBlockGuard; }
    wxStaticText* GetStaticText4() { return m_staticText4; }
    wxTextCtrl* GetTextCtrlVD() { return m_textCtrlVD; }
    wxButton* GetButtonSelectVD() { return m_buttonSelectVD; }
    wxStaticText* GetStaticText2() { return m_staticText2; }
    wxTextCtrl* GetTextCtrlGenFilePath() { return m_textCtrlGenFilePath; }
    wxButton* GetButtonBrowseFolder() { return m_buttonBrowseFolder; }
    wxStaticText* GetStaticText8() { return m_staticText8; }
    wxCheckBox* GetCheckBoxInline() { return m_checkBoxInline; }
    wxCheckBox* GetCheckBoxHpp() { return m_checkBoxHpp; }
    wxCheckBox* GetCheckBoxPragmaOnce() { return m_checkBoxPragmaOnce; }
    wxStaticText* GetStaticText7() { return m_staticText7; }
    wxListCtrl* GetListCtrl1() { return m_listCtrl1; }
    wxButton* GetButtonAddInheritance() { return m_buttonAddInheritance; }
    wxButton* GetButtonDelInheritance() { return m_buttonDelInheritance; }
    wxCheckBox* GetCheckBoxCopyable() { return m_checkBoxCopyable; }
    wxCheckBox* GetCheckBoxImplVirtual() { return m_checkBoxImplVirtual; }
    wxCheckBox* GetCheckBoxSingleton() { return m_checkBoxSingleton; }
    wxCheckBox* GetCheckBoxImplPureVirtual() { return m_checkBoxImplPureVirtual; }
    wxCheckBox* GetCheckBoxVirtualDtor() { return m_checkBoxVirtualDtor; }
    wxCollapsiblePane* GetCollPane2() { return m_collPane2; }
    NewClassBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New Class"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NewClassBaseDlg();
};


class NewIneritanceBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_staticText20;
    wxTextCtrl* m_textCtrlInhertiance;
    wxButton* m_button24;
    wxStaticText* m_staticText26;
    wxChoice* m_choiceAccess;
    wxStdDialogButtonSizer* m_stdBtnSizer14;
    wxButton* m_button16;
    wxButton* m_button18;

protected:
    virtual void OnButtonMore(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText20() { return m_staticText20; }
    wxTextCtrl* GetTextCtrlInhertiance() { return m_textCtrlInhertiance; }
    wxButton* GetButton24() { return m_button24; }
    wxStaticText* GetStaticText26() { return m_staticText26; }
    wxChoice* GetChoiceAccess() { return m_choiceAccess; }
    NewIneritanceBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("NewIneritanceDlgBase"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NewIneritanceBaseDlg();
};

#endif
