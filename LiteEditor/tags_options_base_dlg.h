//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// Copyright            : (C) 2015 The CodeLite Team
// File name            : tags_options_base_dlg.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: tags_options_base_dlg.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_FORMBUILDER_TAGS_OPTIONS_BASE_DLG_BASE_CLASSES_H
#define CODELITE_FORMBUILDER_TAGS_OPTIONS_BASE_DLG_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/treebook.h>
#include <wx/panel.h>
#include <wx/imaglist.h>
#include <wx/statbox.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/checkbox.h>
#include <wx/propgrid/manager.h>
#include <wx/propgrid/property.h>
#include <wx/propgrid/advprops.h>
#include <wx/slider.h>
#include <wx/notebook.h>
#include <wx/bannerwindow.h>
#include <wx/button.h>
#include <wx/hyperlink.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif
#include "tags_options_data.h"

class TagsOptionsBaseDlg : public wxDialog
{
protected:
    wxTreebook* m_treebook2;
    wxPanel* m_paneDisplayAndBehavior;
    wxStaticText* m_staticText14;
    wxTextCtrl* m_spinCtrlNumberOfCCItems;
    wxCheckBox* m_checkBoxEnableCaseSensitiveCompletion;
    wxCheckBox* m_checkDisplayTypeInfo;
    wxCheckBox* m_checkDisplayFunctionTip;
    wxCheckBox* m_checkCppKeywordAssist;
    wxCheckBox* m_checkBoxKeepFunctionSignature;
    wxCheckBox* m_checkBoxretagWorkspaceOnStartup;
    wxCheckBox* m_checkDisableParseOnSave;
    wxCheckBox* m_checkBoxDeepUsingNamespaceResolving;
    wxPanel* m_paneColouring;
    wxPropertyGridManager* m_pgMgrColouring;
    wxPGProperty* m_pgPropTrackPreProcessors;
    wxPGProperty* m_pgPropColourLocalVariables;
    wxPGProperty* m_pgPropColourWorkspaceSymbols;
    wxPanel* m_paneTriggering;
    wxCheckBox* m_checkWordAssist;
    wxStaticText* m_staticTextMinWordLen;
    wxSlider* m_sliderMinWordLen;
    wxCheckBox* m_checkAutoInsertSingleChoice;
    wxPanel* m_panelCtags;
    wxPanel* m_panelCtagsSearchPaths;
    wxNotebook* m_notebook36;
    wxPanel* m_panel38;
    wxBannerWindow* m_banner34;
    wxTextCtrl* m_textCtrlCtagsSearchPaths;
    wxButton* m_buttonAddSearchPath;
    wxButton* m_buttonCtagsSuggest;
    wxPanel* m_panel40;
    wxBannerWindow* m_banner44;
    wxTextCtrl* m_textCtrlCtagsExcludePaths;
    wxButton* m_buttonAddExcludePath;
    wxPanel* m_panelCtagsAdvanced;
    wxStaticText* m_staticText3;
    wxTextCtrl* m_textFileSpec;
    wxStaticText* m_staticText92;
    wxTextCtrl* m_textCtrlFilesList;
    wxButton* m_buttonParse;
    wxNotebook* m_notebook2;
    wxPanel* m_panelClangGeneral;
    wxTextCtrl* m_textPrep;
    wxStaticText* m_staticText9;
    wxHyperlinkCtrl* m_hyperlink1;
    wxPanel* m_panel5;
    wxStaticText* m_staticText91;
    wxTextCtrl* m_textTypes;
    wxPanel* m_panelClang;
    wxCheckBox* m_checkBoxEnableClangCC;
    wxNotebook* m_notebookClang;
    wxPanel* m_panel3;
    wxCheckBox* m_checkBoxClangFirst;
    wxStaticText* m_staticText13;
    wxPanel* m_panel8;
    wxTextCtrl* m_textCtrlClangSearchPaths;
    wxButton* m_buttonSuggest;
    wxPanel* m_panel4;
    wxStaticText* m_staticText101;
    wxButton* m_buttonClearCache;
    wxStaticText* m_staticText12;
    wxChoice* m_choiceCachePolicy;
    wxButton* m_buttonOK;
    wxButton* m_buttonCancel;

protected:
    virtual void OnColouringPropertyValueChanged(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void OnAutoShowWordAssitUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnAddSearchPath(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSuggestCtags(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAddExcludePath(wxCommandEvent& event) { event.Skip(); }
    virtual void OnParse(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFileSelectedUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnClangCCEnabledUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSuggestSearchPaths(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearClangCache(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearClangCacheUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnButtonOK(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText14() { return m_staticText14; }
    wxTextCtrl* GetSpinCtrlNumberOfCCItems() { return m_spinCtrlNumberOfCCItems; }
    wxCheckBox* GetCheckBoxEnableCaseSensitiveCompletion() { return m_checkBoxEnableCaseSensitiveCompletion; }
    wxCheckBox* GetCheckDisplayTypeInfo() { return m_checkDisplayTypeInfo; }
    wxCheckBox* GetCheckDisplayFunctionTip() { return m_checkDisplayFunctionTip; }
    wxCheckBox* GetCheckCppKeywordAssist() { return m_checkCppKeywordAssist; }
    wxCheckBox* GetCheckBoxKeepFunctionSignature() { return m_checkBoxKeepFunctionSignature; }
    wxCheckBox* GetCheckBoxretagWorkspaceOnStartup() { return m_checkBoxretagWorkspaceOnStartup; }
    wxCheckBox* GetCheckDisableParseOnSave() { return m_checkDisableParseOnSave; }
    wxCheckBox* GetCheckBoxDeepUsingNamespaceResolving() { return m_checkBoxDeepUsingNamespaceResolving; }
    wxPanel* GetPaneDisplayAndBehavior() { return m_paneDisplayAndBehavior; }
    wxPropertyGridManager* GetPgMgrColouring() { return m_pgMgrColouring; }
    wxPanel* GetPaneColouring() { return m_paneColouring; }
    wxCheckBox* GetCheckWordAssist() { return m_checkWordAssist; }
    wxStaticText* GetStaticTextMinWordLen() { return m_staticTextMinWordLen; }
    wxSlider* GetSliderMinWordLen() { return m_sliderMinWordLen; }
    wxCheckBox* GetCheckAutoInsertSingleChoice() { return m_checkAutoInsertSingleChoice; }
    wxPanel* GetPaneTriggering() { return m_paneTriggering; }
    wxBannerWindow* GetBanner34() { return m_banner34; }
    wxTextCtrl* GetTextCtrlCtagsSearchPaths() { return m_textCtrlCtagsSearchPaths; }
    wxButton* GetButtonAddSearchPath() { return m_buttonAddSearchPath; }
    wxButton* GetButtonCtagsSuggest() { return m_buttonCtagsSuggest; }
    wxPanel* GetPanel38() { return m_panel38; }
    wxBannerWindow* GetBanner44() { return m_banner44; }
    wxTextCtrl* GetTextCtrlCtagsExcludePaths() { return m_textCtrlCtagsExcludePaths; }
    wxButton* GetButtonAddExcludePath() { return m_buttonAddExcludePath; }
    wxPanel* GetPanel40() { return m_panel40; }
    wxNotebook* GetNotebook36() { return m_notebook36; }
    wxPanel* GetPanelCtagsSearchPaths() { return m_panelCtagsSearchPaths; }
    wxStaticText* GetStaticText3() { return m_staticText3; }
    wxTextCtrl* GetTextFileSpec() { return m_textFileSpec; }
    wxStaticText* GetStaticText92() { return m_staticText92; }
    wxTextCtrl* GetTextCtrlFilesList() { return m_textCtrlFilesList; }
    wxButton* GetButtonParse() { return m_buttonParse; }
    wxTextCtrl* GetTextPrep() { return m_textPrep; }
    wxStaticText* GetStaticText9() { return m_staticText9; }
    wxHyperlinkCtrl* GetHyperlink1() { return m_hyperlink1; }
    wxPanel* GetPanelClangGeneral() { return m_panelClangGeneral; }
    wxStaticText* GetStaticText91() { return m_staticText91; }
    wxTextCtrl* GetTextTypes() { return m_textTypes; }
    wxPanel* GetPanel5() { return m_panel5; }
    wxNotebook* GetNotebook2() { return m_notebook2; }
    wxPanel* GetPanelCtagsAdvanced() { return m_panelCtagsAdvanced; }
    wxPanel* GetPanelCtags() { return m_panelCtags; }
    wxCheckBox* GetCheckBoxEnableClangCC() { return m_checkBoxEnableClangCC; }
    wxCheckBox* GetCheckBoxClangFirst() { return m_checkBoxClangFirst; }
    wxStaticText* GetStaticText13() { return m_staticText13; }
    wxTextCtrl* GetTextCtrlClangSearchPaths() { return m_textCtrlClangSearchPaths; }
    wxButton* GetButtonSuggest() { return m_buttonSuggest; }
    wxPanel* GetPanel8() { return m_panel8; }
    wxPanel* GetPanel3() { return m_panel3; }
    wxStaticText* GetStaticText101() { return m_staticText101; }
    wxButton* GetButtonClearCache() { return m_buttonClearCache; }
    wxStaticText* GetStaticText12() { return m_staticText12; }
    wxChoice* GetChoiceCachePolicy() { return m_choiceCachePolicy; }
    wxPanel* GetPanel4() { return m_panel4; }
    wxNotebook* GetNotebookClang() { return m_notebookClang; }
    wxPanel* GetPanelClang() { return m_panelClang; }
    wxTreebook* GetTreebook2() { return m_treebook2; }
    wxButton* GetButtonOK() { return m_buttonOK; }
    wxButton* GetButtonCancel() { return m_buttonCancel; }
    TagsOptionsBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Code Completion"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~TagsOptionsBaseDlg();
};

#endif
