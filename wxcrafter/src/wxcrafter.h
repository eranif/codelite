//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _WXCRAFTER_SRC_WXCRAFTER_BASE_CLASSES_H
#define _WXCRAFTER_SRC_WXCRAFTER_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/panel.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/textctrl.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/statbox.h>
#include <wx/checkbox.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/fontpicker.h>
#include <wx/stattext.h>
#include <wx/button.h>
#include <wx/statbmp.h>
#include <wx/wizard.h>
#include <vector>
#include <wx/statline.h>
#include <wx/dataview.h>
#include <wx/notebook.h>
#include <wx/imaglist.h>
#include <wx/combobox.h>
#include <wx/splitter.h>
#include <wx/treectrl.h>
#include "clTreeCtrl.h"
#include <wx/stc/stc.h>
#include "UI/events_table_list_view.h"
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

// clang-format on

class TextEditorBaseClass : public wxPanel
{
protected:
    wxTextCtrl* m_textCtrl;

protected:
    virtual void OnTextEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnKillFocus(wxFocusEvent& event) { event.Skip(); }
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetTextCtrl() { return m_textCtrl; }
    TextEditorBaseClass(wxWindow* parent,
                        wxWindowID id = wxID_ANY,
                        const wxPoint& pos = wxDefaultPosition,
                        const wxSize& size = wxSize(-1, -1),
                        long style = wxWANTS_CHARS | wxTAB_TRAVERSAL);
    virtual ~TextEditorBaseClass();
};

class FontPickerDlgBaseClass : public wxDialog
{
protected:
    wxCheckBox* m_checkBoxPreDefinedFont;
    wxChoice* m_choiceSystemFonts;
    wxCheckBox* m_checkBoxBold;
    wxCheckBox* m_checkBoxItalic;
    wxCheckBox* m_checkBoxUnderlined;
    wxCheckBox* m_checkBoxCustomFont;
    wxFontPickerCtrl* m_fontPicker;
    wxStaticText* m_staticTextSample;
    wxButton* m_button34;
    wxButton* m_button33;

protected:
    virtual void OnUsePreDefinedFont(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSystemFontSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUsePreDefinedFontUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUseCustomFont(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUseCustomFontUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnFontSelected(wxFontPickerEvent& event) { event.Skip(); }

public:
    wxCheckBox* GetCheckBoxPreDefinedFont() { return m_checkBoxPreDefinedFont; }
    wxChoice* GetChoiceSystemFonts() { return m_choiceSystemFonts; }
    wxCheckBox* GetCheckBoxBold() { return m_checkBoxBold; }
    wxCheckBox* GetCheckBoxItalic() { return m_checkBoxItalic; }
    wxCheckBox* GetCheckBoxUnderlined() { return m_checkBoxUnderlined; }
    wxCheckBox* GetCheckBoxCustomFont() { return m_checkBoxCustomFont; }
    wxFontPickerCtrl* GetFontPicker() { return m_fontPicker; }
    wxStaticText* GetStaticTextSample() { return m_staticTextSample; }
    wxButton* GetButton34() { return m_button34; }
    wxButton* GetButton33() { return m_button33; }
    FontPickerDlgBaseClass(wxWindow* parent,
                           wxWindowID id = wxID_ANY,
                           const wxString& title = _("Font Picker"),
                           const wxPoint& pos = wxDefaultPosition,
                           const wxSize& size = wxSize(-1, -1),
                           long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~FontPickerDlgBaseClass();
};

class MessageDlgBaseClass : public wxDialog
{
protected:
    wxPanel* m_panel70;
    wxStaticBitmap* m_staticBitmap75;
    wxStaticText* m_title;
    wxStaticText* m_message;
    wxCheckBox* m_checkBoxDontAnnoy;
    wxStdDialogButtonSizer* m_stdBtnSizer335;
    wxButton* m_button337;
    wxButton* m_button339;

protected:
public:
    wxStaticBitmap* GetStaticBitmap75() { return m_staticBitmap75; }
    wxStaticText* GetTitle() { return m_title; }
    wxStaticText* GetMessage() { return m_message; }
    wxPanel* GetPanel70() { return m_panel70; }
    wxCheckBox* GetCheckBoxDontAnnoy() { return m_checkBoxDontAnnoy; }
    MessageDlgBaseClass(wxWindow* parent,
                        wxWindowID id = wxID_ANY,
                        const wxString& title = _("Message"),
                        const wxPoint& pos = wxDefaultPosition,
                        const wxSize& size = wxSize(-1, -1),
                        long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~MessageDlgBaseClass();
};

class DefineCustomControlWizardBaseClass : public wxWizard
{
protected:
    std::vector<wxWizardPageSimple*> m_pages;

    wxWizardPageSimple* m_wizardPageGeneral;
    wxStaticText* m_staticText88;
    wxStaticLine* m_staticLine265;
    wxStaticText* m_staticText103;
    wxTextCtrl* m_textClassName;
    wxStaticText* m_staticText109;
    wxTextCtrl* m_textCtrlXRCPreviewClass;
    wxWizardPageSimple* m_wizardPageHeader;
    wxStaticText* m_staticText91;
    wxStaticLine* m_staticLine267;
    wxStaticText* m_staticText92;
    wxTextCtrl* m_textCtrlIncludeLine;
    wxWizardPageSimple* m_wizardPageCpp;
    wxStaticText* m_staticText99;
    wxStaticLine* m_staticLine269;
    wxPanel* m_panel107;
    wxStaticText* m_staticText106;
    wxTextCtrl* m_textCtrlInstantiationLine;
    wxWizardPageSimple* m_wizardPageEvents;
    wxStaticText* m_staticText277;
    wxStaticLine* m_staticLine279;
    wxDataViewListCtrl* m_dvListCtrlEvents;
    wxButton* m_button287;
    wxButton* m_button289;

protected:
    virtual void OnPageChanging(wxWizardEvent& event) { event.Skip(); }
    virtual void OnNewEvent(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteEvent(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteEventUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText88() { return m_staticText88; }
    wxStaticLine* GetStaticLine265() { return m_staticLine265; }
    wxStaticText* GetStaticText103() { return m_staticText103; }
    wxTextCtrl* GetTextClassName() { return m_textClassName; }
    wxStaticText* GetStaticText109() { return m_staticText109; }
    wxTextCtrl* GetTextCtrlXRCPreviewClass() { return m_textCtrlXRCPreviewClass; }
    wxWizardPageSimple* GetWizardPageGeneral() { return m_wizardPageGeneral; }
    wxStaticText* GetStaticText91() { return m_staticText91; }
    wxStaticLine* GetStaticLine267() { return m_staticLine267; }
    wxStaticText* GetStaticText92() { return m_staticText92; }
    wxTextCtrl* GetTextCtrlIncludeLine() { return m_textCtrlIncludeLine; }
    wxWizardPageSimple* GetWizardPageHeader() { return m_wizardPageHeader; }
    wxStaticText* GetStaticText99() { return m_staticText99; }
    wxStaticLine* GetStaticLine269() { return m_staticLine269; }
    wxStaticText* GetStaticText106() { return m_staticText106; }
    wxPanel* GetPanel107() { return m_panel107; }
    wxTextCtrl* GetTextCtrlInstantiationLine() { return m_textCtrlInstantiationLine; }
    wxWizardPageSimple* GetWizardPageCpp() { return m_wizardPageCpp; }
    wxStaticText* GetStaticText277() { return m_staticText277; }
    wxStaticLine* GetStaticLine279() { return m_staticLine279; }
    wxDataViewListCtrl* GetDvListCtrlEvents() { return m_dvListCtrlEvents; }
    wxButton* GetButton287() { return m_button287; }
    wxButton* GetButton289() { return m_button289; }
    wxWizardPageSimple* GetWizardPageEvents() { return m_wizardPageEvents; }
    DefineCustomControlWizardBaseClass(wxWindow* parent,
                                       wxWindowID id = wxID_ANY,
                                       const wxString& title = _("Define Custom Control"),
                                       const wxBitmap& bmp = wxNullBitmap,
                                       const wxPoint& pos = wxDefaultPosition,
                                       long style = wxDEFAULT_DIALOG_STYLE);
    wxWizardPageSimple* GetFirstPage() const
    {
        if (!m_pages.empty())
            return m_pages.at(0);
        return NULL;
    }
    virtual ~DefineCustomControlWizardBaseClass();
};

class EditCustomControlDlgBaseClass : public wxDialog
{
protected:
    wxChoice* m_choiceControls;
    wxNotebook* m_notebook;
    wxPanel* m_panel229;
    wxStaticText* m_staticText120;
    wxTextCtrl* m_textCtrlXRCClass;
    wxStaticText* m_staticText122;
    wxTextCtrl* m_textCtrlIncludeFile;
    wxStaticText* m_textCtrlInstantiationLineTEXT;
    wxTextCtrl* m_textCtrlInstantiationLine;
    wxPanel* m_panel231;
    wxDataViewListCtrl* m_dvListCtrlEvents;
    wxButton* m_buttonNewEvent;
    wxButton* m_buttonDeleteEvent;
    wxButton* m_button114;
    wxButton* m_button115;

protected:
    virtual void OnSelectControl(wxCommandEvent& event) { event.Skip(); }
    virtual void OnControlModified(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEventEditDone(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnNewEvent(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteEvent(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteEventUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSave(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSaveUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxChoice* GetChoiceControls() { return m_choiceControls; }
    wxStaticText* GetStaticText120() { return m_staticText120; }
    wxTextCtrl* GetTextCtrlXRCClass() { return m_textCtrlXRCClass; }
    wxStaticText* GetStaticText122() { return m_staticText122; }
    wxTextCtrl* GetTextCtrlIncludeFile() { return m_textCtrlIncludeFile; }
    wxStaticText* GetTextCtrlInstantiationLineTEXT() { return m_textCtrlInstantiationLineTEXT; }
    wxTextCtrl* GetTextCtrlInstantiationLine() { return m_textCtrlInstantiationLine; }
    wxPanel* GetPanel229() { return m_panel229; }
    wxDataViewListCtrl* GetDvListCtrlEvents() { return m_dvListCtrlEvents; }
    wxButton* GetButtonNewEvent() { return m_buttonNewEvent; }
    wxButton* GetButtonDeleteEvent() { return m_buttonDeleteEvent; }
    wxPanel* GetPanel231() { return m_panel231; }
    wxNotebook* GetNotebook() { return m_notebook; }
    wxButton* GetButton114() { return m_button114; }
    wxButton* GetButton115() { return m_button115; }
    EditCustomControlDlgBaseClass(wxWindow* parent,
                                  wxWindowID id = wxID_ANY,
                                  const wxString& title = _("Edit Custom Control..."),
                                  const wxPoint& pos = wxDefaultPosition,
                                  const wxSize& size = wxSize(400, 400),
                                  long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~EditCustomControlDlgBaseClass();
};

class ImportDlgBaseClass : public wxDialog
{
protected:
    wxStaticText* m_staticText128;
    wxTextCtrl* m_filepathText;
    wxButton* m_buttonBrowse;
    wxStaticText* m_staticText139;
    wxTextCtrl* m_textName;
    wxButton* m_buttonFolder;
    wxCheckBox* m_checkBoxAddToProject;
    wxStaticText* m_staticText148;
    wxTextCtrl* m_textCtrl1VirtualFolder;
    wxButton* m_buttonBrowseVD;
    wxCheckBox* m_checkBoxLoadWhenDone;
    wxStdDialogButtonSizer* m_stdBtnSizer341;
    wxButton* m_button343;
    wxButton* m_button345;

protected:
    virtual void OnFileImportTextUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBrowse(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDestFilePathUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBrowseForOutputFolder(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAddToProjectUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnAddFileToProjectUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnBrowseForVirtualFolder(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText128() { return m_staticText128; }
    wxTextCtrl* GetFilepathText() { return m_filepathText; }
    wxButton* GetButtonBrowse() { return m_buttonBrowse; }
    wxStaticText* GetStaticText139() { return m_staticText139; }
    wxTextCtrl* GetTextName() { return m_textName; }
    wxButton* GetButtonFolder() { return m_buttonFolder; }
    wxCheckBox* GetCheckBoxAddToProject() { return m_checkBoxAddToProject; }
    wxStaticText* GetStaticText148() { return m_staticText148; }
    wxTextCtrl* GetTextCtrl1VirtualFolder() { return m_textCtrl1VirtualFolder; }
    wxButton* GetButtonBrowseVD() { return m_buttonBrowseVD; }
    wxCheckBox* GetCheckBoxLoadWhenDone() { return m_checkBoxLoadWhenDone; }
    ImportDlgBaseClass(wxWindow* parent,
                       wxWindowID id = wxID_ANY,
                       const wxString& title = _("Choose an XRC file to import"),
                       const wxPoint& pos = wxDefaultPosition,
                       const wxSize& size = wxSize(-1, -1),
                       long style = wxDEFAULT_DIALOG_STYLE | wxCAPTION | wxRESIZE_BORDER | wxSYSTEM_MENU | wxCLOSE_BOX);
    virtual ~ImportDlgBaseClass();
};

class wxcTreeViewBaseClass : public wxPanel
{
protected:
    wxComboBox* m_comboBoxFiles;
    wxButton* m_button426;
    wxSplitterWindow* m_splitter347;
    wxPanel* m_splitterPageTree;
    clTreeCtrl* m_treeControls;
    wxPanel* m_splitterPageEvents;

protected:
    virtual void OnWxcpFileSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnWorkspaceOpenUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnWxcpComboxTextEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRefreshWxcpFiles(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSashPositionChanged(wxSplitterEvent& event) { event.Skip(); }
    virtual void OnItemSelected(wxTreeEvent& event) { event.Skip(); }
    virtual void OnItemLabelEditEnd(wxTreeEvent& event) { event.Skip(); }
    virtual void OnChar(wxKeyEvent& event) { event.Skip(); }

public:
    wxComboBox* GetComboBoxFiles() { return m_comboBoxFiles; }
    wxButton* GetButton426() { return m_button426; }
    clTreeCtrl* GetTreeControls() { return m_treeControls; }
    wxPanel* GetSplitterPageTree() { return m_splitterPageTree; }
    wxPanel* GetSplitterPageEvents() { return m_splitterPageEvents; }
    wxSplitterWindow* GetSplitter347() { return m_splitter347; }
    wxcTreeViewBaseClass(wxWindow* parent,
                         wxWindowID id = wxID_ANY,
                         const wxPoint& pos = wxDefaultPosition,
                         const wxSize& size = wxSize(500, 300),
                         long style = wxTAB_TRAVERSAL);
    virtual ~wxcTreeViewBaseClass();
};

class DeleteCustomControlDlgBaseClass : public wxDialog
{
protected:
    wxStaticText* m_staticText167;
    wxDataViewListCtrl* m_dvListCtrl;
    wxButton* m_button163;
    wxButton* m_button164;

protected:
    virtual void OnItemValueChanged(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnDeleteControls(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText167() { return m_staticText167; }
    wxDataViewListCtrl* GetDvListCtrl() { return m_dvListCtrl; }
    wxButton* GetButton163() { return m_button163; }
    wxButton* GetButton164() { return m_button164; }
    DeleteCustomControlDlgBaseClass(wxWindow* parent,
                                    wxWindowID id = wxID_ANY,
                                    const wxString& title = _("Delete Custom Control"),
                                    const wxPoint& pos = wxDefaultPosition,
                                    const wxSize& size = wxSize(400, 300),
                                    long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~DeleteCustomControlDlgBaseClass();
};

class wxcAboutDlgBaseClass : public wxDialog
{
protected:
    wxNotebook* m_notebook173;
    wxPanel* m_panel174;
    wxStaticText* m_staticText182;
    wxStaticText* m_staticTextVersion;
    wxStaticText* m_staticText_1;
    wxStaticText* m_staticTextBuildNumber;
    wxStaticBitmap* m_staticBitmap178;
    wxPanel* m_panel427;
    wxStyledTextCtrl* m_stcLicense;
    wxButton* m_button171;

protected:
    virtual void OnSize(wxSizeEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText182() { return m_staticText182; }
    wxStaticText* GetStaticTextVersion() { return m_staticTextVersion; }
    wxStaticText* GetStaticText_1() { return m_staticText_1; }
    wxStaticText* GetStaticTextBuildNumber() { return m_staticTextBuildNumber; }
    wxStaticBitmap* GetStaticBitmap178() { return m_staticBitmap178; }
    wxPanel* GetPanel174() { return m_panel174; }
    wxStyledTextCtrl* GetStcLicense() { return m_stcLicense; }
    wxPanel* GetPanel427() { return m_panel427; }
    wxNotebook* GetNotebook173() { return m_notebook173; }
    wxButton* GetButton171() { return m_button171; }
    wxcAboutDlgBaseClass(wxWindow* parent,
                         wxWindowID id = wxID_ANY,
                         const wxString& title = _("About wxCrafter..."),
                         const wxPoint& pos = wxDefaultPosition,
                         const wxSize& size = wxSize(-1, -1),
                         long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~wxcAboutDlgBaseClass();
};

class NewCustomEventBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_staticText257;
    wxTextCtrl* m_textCtrlEventType;
    wxStaticText* m_staticText261;
    wxTextCtrl* m_textCtrlEventClass;
    wxButton* m_button251;
    wxButton* m_button253;

protected:
public:
    wxStaticText* GetStaticText257() { return m_staticText257; }
    wxTextCtrl* GetTextCtrlEventType() { return m_textCtrlEventType; }
    wxStaticText* GetStaticText261() { return m_staticText261; }
    wxTextCtrl* GetTextCtrlEventClass() { return m_textCtrlEventClass; }
    wxButton* GetButton251() { return m_button251; }
    wxButton* GetButton253() { return m_button253; }
    NewCustomEventBaseDlg(wxWindow* parent,
                          wxWindowID id = wxID_ANY,
                          const wxString& title = _("New Custom Event"),
                          const wxPoint& pos = wxDefaultPosition,
                          const wxSize& size = wxSize(-1, -1),
                          long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~NewCustomEventBaseDlg();
};

class BitmapSelectorDlgBase : public wxDialog
{
protected:
    wxCheckBox* m_checkBoxSelectFile;
    wxTextCtrl* m_textCtrlFile;
    wxButton* m_buttonBrowseBitmap;
    wxCheckBox* m_checkBoxConvertToRelativePath;
    wxCheckBox* m_checkBoxArtProvider;
    wxStaticText* m_staticText315;
    wxChoice* m_choiceArtID;
    wxStaticText* m_staticText319;
    wxChoice* m_choiceArtClientID;
    wxStaticText* m_staticTextHInt;
    wxChoice* m_choiceSize;
    wxButton* m_button297;
    wxButton* m_button299;

protected:
    virtual void OnUseFilePicker(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSelectBitmapUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnBrowseFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUseRelativePaths(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUserArtProvider(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUserArtPorviderUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxCheckBox* GetCheckBoxSelectFile() { return m_checkBoxSelectFile; }
    wxTextCtrl* GetTextCtrlFile() { return m_textCtrlFile; }
    wxButton* GetButtonBrowseBitmap() { return m_buttonBrowseBitmap; }
    wxCheckBox* GetCheckBoxConvertToRelativePath() { return m_checkBoxConvertToRelativePath; }
    wxCheckBox* GetCheckBoxArtProvider() { return m_checkBoxArtProvider; }
    wxStaticText* GetStaticText315() { return m_staticText315; }
    wxChoice* GetChoiceArtID() { return m_choiceArtID; }
    wxStaticText* GetStaticText319() { return m_staticText319; }
    wxChoice* GetChoiceArtClientID() { return m_choiceArtClientID; }
    wxStaticText* GetStaticTextHInt() { return m_staticTextHInt; }
    wxChoice* GetChoiceSize() { return m_choiceSize; }
    wxButton* GetButton297() { return m_button297; }
    wxButton* GetButton299() { return m_button299; }
    BitmapSelectorDlgBase(wxWindow* parent,
                          wxWindowID id = wxID_ANY,
                          const wxString& title = _("Select Bitmap"),
                          const wxPoint& pos = wxDefaultPosition,
                          const wxSize& size = wxSize(-1, -1),
                          long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~BitmapSelectorDlgBase();
};

class EventsEditorPaneBase : public wxPanel
{
protected:
    wxStaticText* m_staticTextEventsPaneTitle;
    wxNotebook* m_notebook14;
    wxPanel* m_panelControlEvents;
    EventsTableListView* m_controlEventsTable;
    wxPanel* m_panelInheritedEvents;
    EventsTableListView* m_inheritedEventsTable;

protected:
public:
    wxStaticText* GetStaticTextEventsPaneTitle() { return m_staticTextEventsPaneTitle; }
    EventsTableListView* GetControlEventsTable() { return m_controlEventsTable; }
    wxPanel* GetPanelControlEvents() { return m_panelControlEvents; }
    EventsTableListView* GetInheritedEventsTable() { return m_inheritedEventsTable; }
    wxPanel* GetPanelInheritedEvents() { return m_panelInheritedEvents; }
    wxNotebook* GetNotebook14() { return m_notebook14; }
    EventsEditorPaneBase(wxWindow* parent,
                         wxWindowID id = wxID_ANY,
                         const wxPoint& pos = wxDefaultPosition,
                         const wxSize& size = wxSize(500, 300),
                         long style = wxTAB_TRAVERSAL);
    virtual ~EventsEditorPaneBase();
};

class DuplicateTLWBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_staticText370;
    wxStaticText* m_staticText2573;
    wxTextCtrl* m_textBasename;
    wxStaticText* m_staticText261510;
    wxTextCtrl* m_textInheritedName;
    wxStaticText* m_staticText2615;
    wxTextCtrl* m_textFilename;
    wxButton* m_button2518;
    wxButton* m_button2539;

protected:
    virtual void OnInheritedNameFocus(wxFocusEvent& event) { event.Skip(); }
    virtual void OnFilenameFocus(wxFocusEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText370() { return m_staticText370; }
    wxStaticText* GetStaticText2573() { return m_staticText2573; }
    wxTextCtrl* GetTextBasename() { return m_textBasename; }
    wxStaticText* GetStaticText261510() { return m_staticText261510; }
    wxTextCtrl* GetTextInheritedName() { return m_textInheritedName; }
    wxStaticText* GetStaticText2615() { return m_staticText2615; }
    wxTextCtrl* GetTextFilename() { return m_textFilename; }
    wxButton* GetButton2518() { return m_button2518; }
    wxButton* GetButton2539() { return m_button2539; }
    DuplicateTLWBaseDlg(wxWindow* parent,
                        wxWindowID id = wxID_ANY,
                        const wxString& title = _("Choose names"),
                        const wxPoint& pos = wxDefaultPosition,
                        const wxSize& size = wxSize(-1, -1),
                        long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~DuplicateTLWBaseDlg();
};

class BmpTextSelectorDlgBase : public wxDialog
{
protected:
    wxDataViewListCtrl* m_dvListCtrl;
    wxButton* m_button392;
    wxButton* m_button394;
    wxButton* m_button396;
    wxStdDialogButtonSizer* m_stdBtnSizer381;
    wxButton* m_button383;
    wxButton* m_button385;

protected:
    virtual void OnItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnNew(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEdit(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnDelete(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxDataViewListCtrl* GetDvListCtrl() { return m_dvListCtrl; }
    wxButton* GetButton392() { return m_button392; }
    wxButton* GetButton394() { return m_button394; }
    wxButton* GetButton396() { return m_button396; }
    BmpTextSelectorDlgBase(wxWindow* parent,
                           wxWindowID id = wxID_ANY,
                           const wxString& title = _("Select Bitmap / Text"),
                           const wxPoint& pos = wxDefaultPosition,
                           const wxSize& size = wxSize(-1, -1),
                           long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~BmpTextSelectorDlgBase();
};

class SingleBitmapAndTextDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText410;
    wxTextCtrl* m_textCtrlText;
    wxStaticText* m_staticText414;
    wxTextCtrl* m_textCtrlBmp;
    wxButton* m_button416;
    wxStdDialogButtonSizer* m_stdBtnSizer402;
    wxButton* m_button404;
    wxButton* m_button406;

protected:
    virtual void OnSelectBitmap(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText410() { return m_staticText410; }
    wxTextCtrl* GetTextCtrlText() { return m_textCtrlText; }
    wxStaticText* GetStaticText414() { return m_staticText414; }
    wxTextCtrl* GetTextCtrlBmp() { return m_textCtrlBmp; }
    wxButton* GetButton416() { return m_button416; }
    SingleBitmapAndTextDlgBase(wxWindow* parent,
                               wxWindowID id = wxID_ANY,
                               const wxString& title = _("Set File and Bitmap"),
                               const wxPoint& pos = wxDefaultPosition,
                               const wxSize& size = wxSize(-1, -1),
                               long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~SingleBitmapAndTextDlgBase();
};

#endif
