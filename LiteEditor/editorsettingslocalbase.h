//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// Copyright            : (C) 2015 Eran Ifrah
// File name            : editorsettingslocalbase.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: editorsettingslocalbase.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_FORMBUILDER_EDITORSETTINGSLOCALBASE_BASE_CLASSES_H
#define CODELITE_FORMBUILDER_EDITORSETTINGSLOCALBASE_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stattext.h>
#include <wx/treebook.h>
#include <wx/panel.h>
#include <wx/imaglist.h>
#include <wx/checkbox.h>
#include <wx/spinctrl.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/button.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

class LocalEditorSettingsbase : public wxDialog
{
protected:
    wxStaticText* m_staticText;
    wxTreebook* m_treebook1;
    wxPanel* m_panel2;
    wxCheckBox* m_indentsUsesTabsEnable;
    wxCheckBox* m_indentsUsesTabs;
    wxCheckBox* m_tabWidthEnable;
    wxStaticText* m_staticTexttabWidth;
    wxSpinCtrl* m_tabWidth;
    wxCheckBox* m_indentWidthEnable;
    wxStaticText* m_staticTextindentWidth;
    wxSpinCtrl* m_indentWidth;
    wxPanel* m_panel3;
    wxCheckBox* m_displayBookmarkMarginEnable;
    wxCheckBox* m_displayBookmarkMargin;
    wxCheckBox* m_checkBoxDisplayFoldMarginEnable;
    wxCheckBox* m_checkBoxDisplayFoldMargin;
    wxCheckBox* m_checkBoxHideChangeMarkerMarginEnable;
    wxCheckBox* m_checkBoxHideChangeMarkerMargin;
    wxCheckBox* m_displayLineNumbersEnable;
    wxCheckBox* m_displayLineNumbers;
    wxPanel* m_panel4;
    wxCheckBox* m_showIndentationGuideLinesEnable;
    wxCheckBox* m_showIndentationGuideLines;
    wxCheckBox* m_highlightCaretLineEnable;
    wxCheckBox* m_highlightCaretLine;
    wxCheckBox* m_checkBoxTrimLineEnable;
    wxCheckBox* m_checkBoxTrimLine;
    wxCheckBox* m_checkBoxAppendLFEnable;
    wxCheckBox* m_checkBoxAppendLF;
    wxCheckBox* m_whitespaceStyleEnable;
    wxStaticText* m_staticTextwhitespaceStyle;
    wxChoice* m_whitespaceStyle;
    wxCheckBox* m_choiceEOLEnable;
    wxStaticText* m_EOLstatic;
    wxChoice* m_choiceEOL;
    wxCheckBox* m_fileEncodingEnable;
    wxStaticText* m_staticTextfileEncoding;
    wxChoice* m_fileEncoding;
    wxStdDialogButtonSizer* m_stdBtnSizer17;
    wxButton* m_button19;
    wxButton* m_button21;

protected:
    virtual void indentsUsesTabsUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void tabWidthUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void indentWidthUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void displayBookmarkMarginUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void checkBoxDisplayFoldMarginUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void checkBoxHideChangeMarkerMarginUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void displayLineNumbersUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void showIndentationGuideLinesUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void highlightCaretLineUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void checkBoxTrimLineUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void checkBoxAppendLFUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void whitespaceStyleUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void choiceEOLUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void fileEncodingUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnOK(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText() { return m_staticText; }
    wxCheckBox* GetIndentsUsesTabsEnable() { return m_indentsUsesTabsEnable; }
    wxCheckBox* GetIndentsUsesTabs() { return m_indentsUsesTabs; }
    wxCheckBox* GetTabWidthEnable() { return m_tabWidthEnable; }
    wxStaticText* GetStaticTexttabWidth() { return m_staticTexttabWidth; }
    wxSpinCtrl* GetTabWidth() { return m_tabWidth; }
    wxCheckBox* GetIndentWidthEnable() { return m_indentWidthEnable; }
    wxStaticText* GetStaticTextindentWidth() { return m_staticTextindentWidth; }
    wxSpinCtrl* GetIndentWidth() { return m_indentWidth; }
    wxPanel* GetPanel2() { return m_panel2; }
    wxCheckBox* GetDisplayBookmarkMarginEnable() { return m_displayBookmarkMarginEnable; }
    wxCheckBox* GetDisplayBookmarkMargin() { return m_displayBookmarkMargin; }
    wxCheckBox* GetCheckBoxDisplayFoldMarginEnable() { return m_checkBoxDisplayFoldMarginEnable; }
    wxCheckBox* GetCheckBoxDisplayFoldMargin() { return m_checkBoxDisplayFoldMargin; }
    wxCheckBox* GetCheckBoxHideChangeMarkerMarginEnable() { return m_checkBoxHideChangeMarkerMarginEnable; }
    wxCheckBox* GetCheckBoxHideChangeMarkerMargin() { return m_checkBoxHideChangeMarkerMargin; }
    wxCheckBox* GetDisplayLineNumbersEnable() { return m_displayLineNumbersEnable; }
    wxCheckBox* GetDisplayLineNumbers() { return m_displayLineNumbers; }
    wxPanel* GetPanel3() { return m_panel3; }
    wxCheckBox* GetShowIndentationGuideLinesEnable() { return m_showIndentationGuideLinesEnable; }
    wxCheckBox* GetShowIndentationGuideLines() { return m_showIndentationGuideLines; }
    wxCheckBox* GetHighlightCaretLineEnable() { return m_highlightCaretLineEnable; }
    wxCheckBox* GetHighlightCaretLine() { return m_highlightCaretLine; }
    wxCheckBox* GetCheckBoxTrimLineEnable() { return m_checkBoxTrimLineEnable; }
    wxCheckBox* GetCheckBoxTrimLine() { return m_checkBoxTrimLine; }
    wxCheckBox* GetCheckBoxAppendLFEnable() { return m_checkBoxAppendLFEnable; }
    wxCheckBox* GetCheckBoxAppendLF() { return m_checkBoxAppendLF; }
    wxCheckBox* GetWhitespaceStyleEnable() { return m_whitespaceStyleEnable; }
    wxStaticText* GetStaticTextwhitespaceStyle() { return m_staticTextwhitespaceStyle; }
    wxChoice* GetWhitespaceStyle() { return m_whitespaceStyle; }
    wxCheckBox* GetChoiceEOLEnable() { return m_choiceEOLEnable; }
    wxStaticText* GetEOLstatic() { return m_EOLstatic; }
    wxChoice* GetChoiceEOL() { return m_choiceEOL; }
    wxCheckBox* GetFileEncodingEnable() { return m_fileEncodingEnable; }
    wxStaticText* GetStaticTextfileEncoding() { return m_staticTextfileEncoding; }
    wxChoice* GetFileEncoding() { return m_fileEncoding; }
    wxPanel* GetPanel4() { return m_panel4; }
    wxTreebook* GetTreebook1() { return m_treebook1; }
    LocalEditorSettingsbase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Local Preferences"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~LocalEditorSettingsbase();
};

#endif
