//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// Copyright            : (C) 2015 The CodeLite Team
// File name            : compiler_pages.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: compiler_page.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_LITEEDITOR_COMPILER_PAGE_BASE_CLASSES_H
#define CODELITE_LITEEDITOR_COMPILER_PAGE_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/statline.h>
#include <wx/button.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/panel.h>
#include <wx/listbox.h>
#include <wx/notebook.h>
#include <wx/imaglist.h>
#include <wx/propgrid/manager.h>
#include <wx/propgrid/property.h>
#include <wx/propgrid/advprops.h>
#include <wx/listctrl.h>
#include <wx/checkbox.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

class CompilerOptionDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText26;
    wxTextCtrl* m_textCtrl18;
    wxStaticText* m_staticText27;
    wxTextCtrl* m_textCtrl19;
    wxStaticLine* m_staticline4;
    wxButton* m_buttonOK;
    wxButton* m_buttonCancel;

protected:

public:
    wxStaticText* GetStaticText26() { return m_staticText26; }
    wxTextCtrl* GetTextCtrl18() { return m_textCtrl18; }
    wxStaticText* GetStaticText27() { return m_staticText27; }
    wxTextCtrl* GetTextCtrl19() { return m_textCtrl19; }
    wxStaticLine* GetStaticline4() { return m_staticline4; }
    wxButton* GetButtonOK() { return m_buttonOK; }
    wxButton* GetButtonCancel() { return m_buttonCancel; }
    CompilerOptionDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = wxT(""), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~CompilerOptionDlgBase();
};


class CompilerPatternDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText5;
    wxTextCtrl* m_textPattern;
    wxStaticText* m_staticText6;
    wxTextCtrl* m_textFileIndex;
    wxStaticText* m_staticText7;
    wxTextCtrl* m_textLineNumber;
    wxStaticText* m_staticText235;
    wxTextCtrl* m_textColumn;
    wxStdDialogButtonSizer* m_stdBtnSizer229;
    wxButton* m_button231;
    wxButton* m_button233;

protected:
    virtual void OnSubmit(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText5() { return m_staticText5; }
    wxTextCtrl* GetTextPattern() { return m_textPattern; }
    wxStaticText* GetStaticText6() { return m_staticText6; }
    wxTextCtrl* GetTextFileIndex() { return m_textFileIndex; }
    wxStaticText* GetStaticText7() { return m_staticText7; }
    wxTextCtrl* GetTextLineNumber() { return m_textLineNumber; }
    wxStaticText* GetStaticText235() { return m_staticText235; }
    wxTextCtrl* GetTextColumn() { return m_textColumn; }
    CompilerPatternDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = wxT(""), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~CompilerPatternDlgBase();
};


class NewCompilerDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText84;
    wxTextCtrl* m_textCtrlCompilerName;
    wxStaticText* m_staticText88;
    wxChoice* m_choiceCompilers;
    wxStdDialogButtonSizer* m_stdBtnSizer75;
    wxButton* m_buttonCancel;
    wxButton* m_buttonOK;

protected:
    virtual void OnOkUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText84() { return m_staticText84; }
    wxTextCtrl* GetTextCtrlCompilerName() { return m_textCtrlCompilerName; }
    wxStaticText* GetStaticText88() { return m_staticText88; }
    wxChoice* GetChoiceCompilers() { return m_choiceCompilers; }
    NewCompilerDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New Compiler"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NewCompilerDlgBase();
};


class CompilerMainPageBase : public wxPanel
{
protected:
    wxButton* m_button222;
    wxListBox* m_listBoxCompilers;
    wxNotebook* m_auiBook;
    wxPanel* m_panelTools;
    wxPropertyGridManager* m_pgMgrTools;
    wxPGProperty* m_pgProp94;
    wxPGProperty* m_pgPropCXX;
    wxPGProperty* m_pgPropCC;
    wxPGProperty* m_pgPropAS;
    wxPGProperty* m_pgPropLD;
    wxPGProperty* m_pgPropSharedObjectLD;
    wxPGProperty* m_pgPropAR;
    wxPGProperty* m_pgPropResourceCompiler;
    wxPGProperty* m_pgPropMAKE;
    wxPGProperty* m_pgPropMkdir;
    wxPGProperty* m_pgPropDebugger;
    wxPanel* m_panelPatterns;
    wxStaticText* m_staticText161;
    wxListCtrl* m_listErrPatterns;
    wxButton* m_btnAddErrPattern;
    wxButton* m_btnDelErrPattern;
    wxButton* m_btnUpdateErrPattern;
    wxStaticText* m_staticText17;
    wxListCtrl* m_listWarnPatterns;
    wxButton* m_btnAddWarnPattern;
    wxButton* m_btnDelWarnPattern;
    wxButton* m_btnUpdateWarnPattern;
    wxPanel* m_panelComilerOptions;
    wxStaticText* m_staticText23_O;
    wxListCtrl* m_listCompilerOptions;
    wxButton* m_buttonCompilerOption;
    wxButton* m_buttonDeleteCompilerOption;
    wxPanel* m_panelLinkerOptions;
    wxStaticText* m_staticText23_L;
    wxListCtrl* m_listLinkerOptions;
    wxButton* m_buttonLinkerOption;
    wxButton* m_buttonDeleteLinkerOption;
    wxPanel* m_panelCompilerSwitches;
    wxStaticText* m_staticText8;
    wxListCtrl* m_listSwitches;
    wxPanel* m_panelFileTypes;
    wxStaticText* m_staticText23;
    wxListCtrl* m_listCtrlFileTypes;
    wxButton* m_buttonNewFileType;
    wxButton* m_buttonDeleteFileType;
    wxPanel* m_panelAdvanced;
    wxStaticText* m_staticText18;
    wxStaticText* m_staticText141;
    wxTextCtrl* m_textCtrlGlobalIncludePath;
    wxButton* m_button67;
    wxStaticText* m_staticText16;
    wxTextCtrl* m_textCtrlGlobalLibPath;
    wxButton* m_button69;
    wxStaticText* m_staticText19;
    wxStaticText* m_staticText3;
    wxTextCtrl* m_textObjectExtension;
    wxStaticText* m_staticText24;
    wxTextCtrl* m_textDependExtension;
    wxStaticText* m_staticText25;
    wxTextCtrl* m_textPreprocessExtension;
    wxCheckBox* m_checkBoxGenerateDependenciesFiles;
    wxCheckBox* m_checkBoxObjectNameSameAsFileName;
    wxCheckBox* m_checkBoxReadObjectsFromFile;

protected:
    virtual void OnAddCompilers(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCompilerSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnContextMenu(wxContextMenuEvent& event) { event.Skip(); }
    virtual void OnCustomEditorButtonClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnValueChanged(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void OnErrItemActivated(wxListEvent& event) { event.Skip(); }
    virtual void OnBtnAddErrPattern(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBtnDelErrPattern(wxCommandEvent& event) { event.Skip(); }
    virtual void OnErrorPatternSelectedUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnBtnUpdateErrPattern(wxCommandEvent& event) { event.Skip(); }
    virtual void OnWarnItemActivated(wxListEvent& event) { event.Skip(); }
    virtual void OnBtnAddWarnPattern(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBtnDelWarnPattern(wxCommandEvent& event) { event.Skip(); }
    virtual void OnWarningPatternSelectedUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnBtnUpdateWarnPattern(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCompilerOptionActivated(wxListEvent& event) { event.Skip(); }
    virtual void OnCompilerOptionDeSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnCompilerOptionSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnNewCompilerOption(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteCompilerOption(wxCommandEvent& event) { event.Skip(); }
    virtual void OnLinkerOptionActivated(wxListEvent& event) { event.Skip(); }
    virtual void OnLinkerOptionDeSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnLinkerOptionSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnNewLinkerOption(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteLinkerOption(wxCommandEvent& event) { event.Skip(); }
    virtual void OnItemActivated(wxListEvent& event) { event.Skip(); }
    virtual void OnItemSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnFileTypeActivated(wxListEvent& event) { event.Skip(); }
    virtual void OnFileTypeDeSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnFileTypeSelected(wxListEvent& event) { event.Skip(); }
    virtual void OnNewFileType(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteFileType(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCmdModify(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditIncludePaths(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditLibraryPaths(wxCommandEvent& event) { event.Skip(); }

public:
    wxButton* GetButton222() { return m_button222; }
    wxListBox* GetListBoxCompilers() { return m_listBoxCompilers; }
    wxPropertyGridManager* GetPgMgrTools() { return m_pgMgrTools; }
    wxPanel* GetPanelTools() { return m_panelTools; }
    wxStaticText* GetStaticText161() { return m_staticText161; }
    wxListCtrl* GetListErrPatterns() { return m_listErrPatterns; }
    wxButton* GetBtnAddErrPattern() { return m_btnAddErrPattern; }
    wxButton* GetBtnDelErrPattern() { return m_btnDelErrPattern; }
    wxButton* GetBtnUpdateErrPattern() { return m_btnUpdateErrPattern; }
    wxStaticText* GetStaticText17() { return m_staticText17; }
    wxListCtrl* GetListWarnPatterns() { return m_listWarnPatterns; }
    wxButton* GetBtnAddWarnPattern() { return m_btnAddWarnPattern; }
    wxButton* GetBtnDelWarnPattern() { return m_btnDelWarnPattern; }
    wxButton* GetBtnUpdateWarnPattern() { return m_btnUpdateWarnPattern; }
    wxPanel* GetPanelPatterns() { return m_panelPatterns; }
    wxStaticText* GetStaticText23_O() { return m_staticText23_O; }
    wxListCtrl* GetListCompilerOptions() { return m_listCompilerOptions; }
    wxButton* GetButtonCompilerOption() { return m_buttonCompilerOption; }
    wxButton* GetButtonDeleteCompilerOption() { return m_buttonDeleteCompilerOption; }
    wxPanel* GetPanelComilerOptions() { return m_panelComilerOptions; }
    wxStaticText* GetStaticText23_L() { return m_staticText23_L; }
    wxListCtrl* GetListLinkerOptions() { return m_listLinkerOptions; }
    wxButton* GetButtonLinkerOption() { return m_buttonLinkerOption; }
    wxButton* GetButtonDeleteLinkerOption() { return m_buttonDeleteLinkerOption; }
    wxPanel* GetPanelLinkerOptions() { return m_panelLinkerOptions; }
    wxStaticText* GetStaticText8() { return m_staticText8; }
    wxListCtrl* GetListSwitches() { return m_listSwitches; }
    wxPanel* GetPanelCompilerSwitches() { return m_panelCompilerSwitches; }
    wxStaticText* GetStaticText23() { return m_staticText23; }
    wxListCtrl* GetListCtrlFileTypes() { return m_listCtrlFileTypes; }
    wxButton* GetButtonNewFileType() { return m_buttonNewFileType; }
    wxButton* GetButtonDeleteFileType() { return m_buttonDeleteFileType; }
    wxPanel* GetPanelFileTypes() { return m_panelFileTypes; }
    wxStaticText* GetStaticText18() { return m_staticText18; }
    wxStaticText* GetStaticText141() { return m_staticText141; }
    wxTextCtrl* GetTextCtrlGlobalIncludePath() { return m_textCtrlGlobalIncludePath; }
    wxButton* GetButton67() { return m_button67; }
    wxStaticText* GetStaticText16() { return m_staticText16; }
    wxTextCtrl* GetTextCtrlGlobalLibPath() { return m_textCtrlGlobalLibPath; }
    wxButton* GetButton69() { return m_button69; }
    wxStaticText* GetStaticText19() { return m_staticText19; }
    wxStaticText* GetStaticText3() { return m_staticText3; }
    wxTextCtrl* GetTextObjectExtension() { return m_textObjectExtension; }
    wxStaticText* GetStaticText24() { return m_staticText24; }
    wxTextCtrl* GetTextDependExtension() { return m_textDependExtension; }
    wxStaticText* GetStaticText25() { return m_staticText25; }
    wxTextCtrl* GetTextPreprocessExtension() { return m_textPreprocessExtension; }
    wxCheckBox* GetCheckBoxGenerateDependenciesFiles() { return m_checkBoxGenerateDependenciesFiles; }
    wxCheckBox* GetCheckBoxObjectNameSameAsFileName() { return m_checkBoxObjectNameSameAsFileName; }
    wxCheckBox* GetCheckBoxReadObjectsFromFile() { return m_checkBoxReadObjectsFromFile; }
    wxPanel* GetPanelAdvanced() { return m_panelAdvanced; }
    wxNotebook* GetAuiBook() { return m_auiBook; }
    CompilerMainPageBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~CompilerMainPageBase();
};

#endif
