//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: NewKeyShortcutBaseDlg.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CODELITE_PLUGIN_NEWKEYSHORTCUTBASEDLG_BASE_CLASSES_H
#define _CODELITE_PLUGIN_NEWKEYSHORTCUTBASEDLG_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/panel.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/checkbox.h>
#include <wx/button.h>
#include <wx/statline.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

#include "codelite_exports.h"
// clang-format on

class WXDLLIMPEXP_SDK NewKeyShortcutBaseDlg : public wxDialog
{
public:
    enum {
        ID_SUGGEST = 10001,
    };

protected:
    wxPanel* m_panel1;
    wxStaticText* m_staticTextActionLabel;
    wxStaticText* m_staticTextAction;
    wxStaticText* m_staticText10;
    wxTextCtrl* m_textCtrl1;
    wxStaticText* m_staticText12;
    wxCheckBox* m_checkBoxCtrl;
    wxCheckBox* m_checkBoxCmd;
    wxCheckBox* m_checkBoxAlt;
    wxCheckBox* m_checkBoxShift;
    wxButton* m_buttonClear;
    wxButton* m_button30;
    wxStaticLine* m_staticLine39;
    wxStdDialogButtonSizer* m_stdBtnSizer22;
    wxButton* m_button24;
    wxButton* m_button26;

protected:
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnClear(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSuggest(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticTextActionLabel() { return m_staticTextActionLabel; }
    wxStaticText* GetStaticTextAction() { return m_staticTextAction; }
    wxStaticText* GetStaticText10() { return m_staticText10; }
    wxTextCtrl* GetTextCtrl1() { return m_textCtrl1; }
    wxStaticText* GetStaticText12() { return m_staticText12; }
    wxCheckBox* GetCheckBoxCtrl() { return m_checkBoxCtrl; }
    wxCheckBox* GetCheckBoxCmd() { return m_checkBoxCmd; }
    wxCheckBox* GetCheckBoxAlt() { return m_checkBoxAlt; }
    wxCheckBox* GetCheckBoxShift() { return m_checkBoxShift; }
    wxButton* GetButtonClear() { return m_buttonClear; }
    wxButton* GetButton30() { return m_button30; }
    wxStaticLine* GetStaticLine39() { return m_staticLine39; }
    wxPanel* GetPanel1() { return m_panel1; }
    NewKeyShortcutBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY,
                          const wxString& title = _("Set New Key Accelerator"), const wxPoint& pos = wxDefaultPosition,
                          const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~NewKeyShortcutBaseDlg();
};

#endif
