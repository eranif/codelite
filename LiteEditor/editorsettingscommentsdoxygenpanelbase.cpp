//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: editor_options_comments_doxygen.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "editorsettingscommentsdoxygenpanelbase.h"

// Declare the bitmap loading function
extern void wxCB83BInitBitmapResources();

static bool bBitmapLoaded = false;

EditorSettingsCommentsDoxygenPanelBase::EditorSettingsCommentsDoxygenPanelBase(wxWindow* parent, wxWindowID id,
                                                                               const wxPoint& pos, const wxSize& size,
                                                                               long style)
    : wxPanel(parent, id, pos, size, style)
{
    if(!bBitmapLoaded) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCB83BInitBitmapResources();
        bBitmapLoaded = true;
    }

    wxBoxSizer* bSizer1 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(bSizer1);

    m_staticText22 = new wxStaticText(this, wxID_ANY, _("Class doc template:"), wxDefaultPosition,
                                      wxDLG_UNIT(this, wxSize(-1, -1)), 0);

    bSizer1->Add(m_staticText22, 0, wxALL, WXC_FROM_DIP(5));

    m_stcClassTemplate = new wxStyledTextCtrl(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    // Configure the fold margin
    m_stcClassTemplate->SetMarginType(4, wxSTC_MARGIN_SYMBOL);
    m_stcClassTemplate->SetMarginMask(4, wxSTC_MASK_FOLDERS);
    m_stcClassTemplate->SetMarginSensitive(4, true);
    m_stcClassTemplate->SetMarginWidth(4, 0);

    // Configure the tracker margin
    m_stcClassTemplate->SetMarginWidth(1, 0);

    // Configure the symbol margin
    m_stcClassTemplate->SetMarginType(2, wxSTC_MARGIN_SYMBOL);
    m_stcClassTemplate->SetMarginMask(2, ~(wxSTC_MASK_FOLDERS));
    m_stcClassTemplate->SetMarginWidth(2, 0);
    m_stcClassTemplate->SetMarginSensitive(2, true);

    // Configure the line numbers margin
    m_stcClassTemplate->SetMarginType(0, wxSTC_MARGIN_NUMBER);
    m_stcClassTemplate->SetMarginWidth(0, 0);

    // Configure the line symbol margin
    m_stcClassTemplate->SetMarginType(3, wxSTC_MARGIN_FORE);
    m_stcClassTemplate->SetMarginMask(3, 0);
    m_stcClassTemplate->SetMarginWidth(3, 0);
    // Select the lexer
    m_stcClassTemplate->SetLexer(wxSTC_LEX_NULL);
    // Set default font / styles
    m_stcClassTemplate->StyleClearAll();
    m_stcClassTemplate->SetWrapMode(2);
    m_stcClassTemplate->SetIndentationGuides(0);
    m_stcClassTemplate->SetEOLMode(2);
    m_stcClassTemplate->SetKeyWords(0, wxT(""));
    m_stcClassTemplate->SetKeyWords(1, wxT(""));
    m_stcClassTemplate->SetKeyWords(2, wxT(""));
    m_stcClassTemplate->SetKeyWords(3, wxT(""));
    m_stcClassTemplate->SetKeyWords(4, wxT(""));

    bSizer1->Add(m_stcClassTemplate, 1, wxALL | wxEXPAND, WXC_FROM_DIP(5));

    m_staticText26 = new wxStaticText(this, wxID_ANY, _("Function doc template:"), wxDefaultPosition,
                                      wxDLG_UNIT(this, wxSize(-1, -1)), 0);

    bSizer1->Add(m_staticText26, 0, wxALL, WXC_FROM_DIP(5));

    m_stcFunctionTemplate =
        new wxStyledTextCtrl(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    // Configure the fold margin
    m_stcFunctionTemplate->SetMarginType(4, wxSTC_MARGIN_SYMBOL);
    m_stcFunctionTemplate->SetMarginMask(4, wxSTC_MASK_FOLDERS);
    m_stcFunctionTemplate->SetMarginSensitive(4, true);
    m_stcFunctionTemplate->SetMarginWidth(4, 0);

    // Configure the tracker margin
    m_stcFunctionTemplate->SetMarginWidth(1, 0);

    // Configure the symbol margin
    m_stcFunctionTemplate->SetMarginType(2, wxSTC_MARGIN_SYMBOL);
    m_stcFunctionTemplate->SetMarginMask(2, ~(wxSTC_MASK_FOLDERS));
    m_stcFunctionTemplate->SetMarginWidth(2, 0);
    m_stcFunctionTemplate->SetMarginSensitive(2, true);

    // Configure the line numbers margin
    m_stcFunctionTemplate->SetMarginType(0, wxSTC_MARGIN_NUMBER);
    m_stcFunctionTemplate->SetMarginWidth(0, 0);

    // Configure the line symbol margin
    m_stcFunctionTemplate->SetMarginType(3, wxSTC_MARGIN_FORE);
    m_stcFunctionTemplate->SetMarginMask(3, 0);
    m_stcFunctionTemplate->SetMarginWidth(3, 0);
    // Select the lexer
    m_stcFunctionTemplate->SetLexer(wxSTC_LEX_NULL);
    // Set default font / styles
    m_stcFunctionTemplate->StyleClearAll();
    m_stcFunctionTemplate->SetWrapMode(2);
    m_stcFunctionTemplate->SetIndentationGuides(0);
    m_stcFunctionTemplate->SetEOLMode(2);
    m_stcFunctionTemplate->SetKeyWords(0, wxT(""));
    m_stcFunctionTemplate->SetKeyWords(1, wxT(""));
    m_stcFunctionTemplate->SetKeyWords(2, wxT(""));
    m_stcFunctionTemplate->SetKeyWords(3, wxT(""));
    m_stcFunctionTemplate->SetKeyWords(4, wxT(""));

    bSizer1->Add(m_stcFunctionTemplate, 1, wxALL | wxEXPAND, WXC_FROM_DIP(5));

    wxBoxSizer* boxSizer29 = new wxBoxSizer(wxHORIZONTAL);

    bSizer1->Add(boxSizer29, 0, wxALL, WXC_FROM_DIP(5));

    m_checkBoxAutoInsert = new wxCheckBox(this, wxID_ANY, _("Auto generate document block"), wxDefaultPosition,
                                          wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_checkBoxAutoInsert->SetValue(true);
    m_checkBoxAutoInsert->SetToolTip(
        _("Generate document block when user types '/**' and hits ENTER\non top of a function"));

    boxSizer29->Add(m_checkBoxAutoInsert, 0, wxALL, WXC_FROM_DIP(5));

    m_checkBoxQtStyle = new wxCheckBox(this, wxID_ANY, _("Use Qt document style"), wxDefaultPosition,
                                       wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_checkBoxQtStyle->SetValue(false);

    boxSizer29->Add(m_checkBoxQtStyle, 0, wxALL, WXC_FROM_DIP(5));

    SetName(wxT("EditorSettingsCommentsDoxygenPanelBase"));
    SetSize(wxDLG_UNIT(this, wxSize(-1, -1)));
    if(GetSizer()) { GetSizer()->Fit(this); }
}

EditorSettingsCommentsDoxygenPanelBase::~EditorSettingsCommentsDoxygenPanelBase() {}
