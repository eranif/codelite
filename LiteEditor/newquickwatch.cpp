//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: newquickwatch.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "newquickwatch.h"

// Declare the bitmap loading function
extern void wxCB786InitBitmapResources();

static bool bBitmapLoaded = false;

clDebuggerEditItemDlgBase::clDebuggerEditItemDlgBase(wxWindow* parent, wxWindowID id, const wxString& title,
                                                     const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if(!bBitmapLoaded) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCB786InitBitmapResources();
        bBitmapLoaded = true;
    }

    wxBoxSizer* boxSizer24 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer24);

    m_panel32 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxTAB_TRAVERSAL);

    boxSizer24->Add(m_panel32, 1, wxALL | wxEXPAND, WXC_FROM_DIP(5));

    wxBoxSizer* boxSizer34 = new wxBoxSizer(wxVERTICAL);
    m_panel32->SetSizer(boxSizer34);

    m_staticText36 = new wxStaticText(m_panel32, wxID_ANY, _("Enter new expression:"), wxDefaultPosition,
                                      wxDLG_UNIT(m_panel32, wxSize(-1, -1)), 0);

    boxSizer34->Add(m_staticText36, 0, wxALL | wxALIGN_CENTER_HORIZONTAL, WXC_FROM_DIP(5));

    m_textCtrl38 =
        new wxTextCtrl(m_panel32, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel32, wxSize(-1, -1)), 0);
    m_textCtrl38->SetFocus();
#if wxVERSION_NUMBER >= 3000
    m_textCtrl38->SetHint(wxT(""));
#endif

    boxSizer34->Add(m_textCtrl38, 0, wxALL | wxEXPAND, WXC_FROM_DIP(5));

    wxBoxSizer* boxSizer26 = new wxBoxSizer(wxHORIZONTAL);

    boxSizer24->Add(boxSizer26, 0, wxALL | wxALIGN_CENTER_HORIZONTAL, WXC_FROM_DIP(5));

    m_button28 = new wxButton(this, wxID_OK, _("&OK"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_button28->SetDefault();

    boxSizer26->Add(m_button28, 0, wxALL, WXC_FROM_DIP(5));

    m_button30 = new wxButton(this, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);

    boxSizer26->Add(m_button30, 0, wxALL, WXC_FROM_DIP(5));

    SetName(wxT("clDebuggerEditItemDlgBase"));
    SetMinClientSize(wxSize(400, -1));
    SetSize(wxDLG_UNIT(this, wxSize(400, -1)));
    if(GetSizer()) { GetSizer()->Fit(this); }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

clDebuggerEditItemDlgBase::~clDebuggerEditItemDlgBase() {}
