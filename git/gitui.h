//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: gitui.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CODELITE_GIT_GITUI_BASE_CLASSES_H
#define _CODELITE_GIT_GITUI_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/treebook.h>
#include <wx/panel.h>
#include <wx/imaglist.h>
#include <wx/stattext.h>
#include <wx/filepicker.h>
#include <wx/textctrl.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/checkbox.h>
#include <wx/button.h>
#include <wx/splitter.h>
#include "clThemedSplitterWindow.h"
#include <wx/dataview.h>
#include "clThemedListCtrl.h"
#include <wx/stc/stc.h>
#include "clThemedSTC.hpp"
#include <wx/toolbar.h>
#include "clToolBar.h"
#include <wx/statbox.h>
#include <wx/srchctrl.h>
#include <wx/combobox.h>
#include <wx/listbox.h>
#include "gitCommitEditor.h"
#include <wx/radiobox.h>
#include <wx/radiobut.h>
#include <wx/spinctrl.h>
#include <wx/notebook.h>
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <map>
#include <wx/menu.h>
#include <wx/checklst.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

// clang-format on

class GitSettingsDlgBase : public wxDialog
{
protected:
    wxTreebook* m_treebook230;
    wxPanel* m_panel232;
    wxStaticText* m_staticText42;
    wxFilePickerCtrl* m_pathGIT;
    wxStaticText* m_staticText54;
    wxFilePickerCtrl* m_pathGITK;
    wxStaticText* m_staticText355;
    wxTextCtrl* m_textCtrlGitShell;
    wxStaticText* m_staticText824;
    wxChoice* m_choiceDiffTools;
    wxPanel* m_panel234;
    wxStaticText* m_staticText246;
    wxTextCtrl* m_textCtrlGlobalName;
    wxStaticText* m_staticText250;
    wxTextCtrl* m_textCtrlGlobalEmail;
    wxStaticText* m_staticText254;
    wxTextCtrl* m_textCtrlLocalName;
    wxStaticText* m_staticText258;
    wxTextCtrl* m_textCtrlLocalEmail;
    wxStaticText* m_staticText2585;
    wxDirPickerCtrl* m_dirPickerGitRepoPath;
    wxPanel* m_panel236;
    wxCheckBox* m_checkBoxTerminal;
    wxCheckBox* m_checkBoxLog;
    wxCheckBox* m_checkBoxShowBlameInStatusBar;
    wxStdDialogButtonSizer* m_stdBtnSizer284;
    wxButton* m_buttonOK;
    wxButton* m_buttonCancel;

protected:
    virtual void OnLocalRepoUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnOK(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText42() { return m_staticText42; }
    wxFilePickerCtrl* GetPathGIT() { return m_pathGIT; }
    wxStaticText* GetStaticText54() { return m_staticText54; }
    wxFilePickerCtrl* GetPathGITK() { return m_pathGITK; }
    wxStaticText* GetStaticText355() { return m_staticText355; }
    wxTextCtrl* GetTextCtrlGitShell() { return m_textCtrlGitShell; }
    wxStaticText* GetStaticText824() { return m_staticText824; }
    wxChoice* GetChoiceDiffTools() { return m_choiceDiffTools; }
    wxPanel* GetPanel232() { return m_panel232; }
    wxStaticText* GetStaticText246() { return m_staticText246; }
    wxTextCtrl* GetTextCtrlGlobalName() { return m_textCtrlGlobalName; }
    wxStaticText* GetStaticText250() { return m_staticText250; }
    wxTextCtrl* GetTextCtrlGlobalEmail() { return m_textCtrlGlobalEmail; }
    wxStaticText* GetStaticText254() { return m_staticText254; }
    wxTextCtrl* GetTextCtrlLocalName() { return m_textCtrlLocalName; }
    wxStaticText* GetStaticText258() { return m_staticText258; }
    wxTextCtrl* GetTextCtrlLocalEmail() { return m_textCtrlLocalEmail; }
    wxStaticText* GetStaticText2585() { return m_staticText2585; }
    wxDirPickerCtrl* GetDirPickerGitRepoPath() { return m_dirPickerGitRepoPath; }
    wxPanel* GetPanel234() { return m_panel234; }
    wxCheckBox* GetCheckBoxTerminal() { return m_checkBoxTerminal; }
    wxCheckBox* GetCheckBoxLog() { return m_checkBoxLog; }
    wxCheckBox* GetCheckBoxShowBlameInStatusBar() { return m_checkBoxShowBlameInStatusBar; }
    wxPanel* GetPanel236() { return m_panel236; }
    wxTreebook* GetTreebook230() { return m_treebook230; }
    GitSettingsDlgBase(wxWindow* parent,
                       wxWindowID id = wxID_ANY,
                       const wxString& title = _("Git settings..."),
                       const wxPoint& pos = wxDefaultPosition,
                       const wxSize& size = wxSize(-1, -1),
                       long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~GitSettingsDlgBase();
};

class GitCommitDlgBase : public wxDialog
{
protected:
    wxBoxSizer* m_mainSizer;
    clThemedSplitterWindow* m_splitterMain;
    wxPanel* m_panel3;
    clThemedSplitterWindow* m_splitterInner;
    wxPanel* m_panel1;
    clThemedOrderedListCtrl* m_dvListCtrlFiles;
    wxPanel* m_panel2;
    clThemedSTC* m_stcDiff;
    wxPanel* m_panel4;
    clToolBar* m_toolbar;
    clThemedSTC* m_stcCommitMessage;
    wxCheckBox* m_checkBoxSignedOff;
    wxCheckBox* m_checkBoxAmend;
    wxButton* m_buttonOK;
    wxButton* m_buttonCancel;

protected:
    virtual void OnChangeFile(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnAmendClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCommitOK(wxCommandEvent& event) { event.Skip(); }

public:
    clThemedOrderedListCtrl* GetDvListCtrlFiles() { return m_dvListCtrlFiles; }
    wxPanel* GetPanel1() { return m_panel1; }
    clThemedSTC* GetStcDiff() { return m_stcDiff; }
    wxPanel* GetPanel2() { return m_panel2; }
    clThemedSplitterWindow* GetSplitterInner() { return m_splitterInner; }
    wxPanel* GetPanel3() { return m_panel3; }
    clToolBar* GetToolbar() { return m_toolbar; }
    clThemedSTC* GetStcCommitMessage() { return m_stcCommitMessage; }
    wxPanel* GetPanel4() { return m_panel4; }
    clThemedSplitterWindow* GetSplitterMain() { return m_splitterMain; }
    wxCheckBox* GetCheckBoxSignedOff() { return m_checkBoxSignedOff; }
    wxCheckBox* GetCheckBoxAmend() { return m_checkBoxAmend; }
    wxButton* GetButtonOK() { return m_buttonOK; }
    wxButton* GetButtonCancel() { return m_buttonCancel; }
    GitCommitDlgBase(wxWindow* parent,
                     wxWindowID id = wxID_ANY,
                     const wxString& title = _("Git commit"),
                     const wxPoint& pos = wxDefaultPosition,
                     const wxSize& size = wxSize(-1, -1),
                     long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~GitCommitDlgBase();
};

class GitCommitListDlgBase : public wxDialog
{
protected:
    wxPanel* m_panel806;
    clThemedSplitterWindow* m_splitter174;
    wxPanel* m_splitterPage178;
    clThemedSplitterWindow* m_splitter777;
    wxPanel* m_splitterPage781;
    wxSearchCtrl* m_searchCtrlFilter;
    wxButton* m_buttonPrevious;
    wxButton* m_buttonNext;
    wxComboBox* m_comboExtraArgs;
    wxCheckBox* m_checkBoxIgnoreCase;
    clThemedListCtrl* m_dvListCtrlCommitList;
    wxPanel* m_splitterPage785;
    clThemedSplitterWindow* m_splitter791;
    wxPanel* m_splitterPage795;
    wxStaticText* m_staticText210;
    wxListBox* m_fileListBox;
    wxPanel* m_splitterPage799;
    wxStaticText* m_staticText220;
    clThemedSTC* m_stcCommitMessage;
    wxPanel* m_splitterPage182;
    wxStaticText* m_staticText217;
    clThemedSTC* m_stcDiff;
    wxButton* m_buttonClose;

protected:
    virtual void OnClose(wxCloseEvent& event) { event.Skip(); }
    virtual void OnSearchCommitList(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPrevious(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPreviousUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnNext(wxCommandEvent& event) { event.Skip(); }
    virtual void OnNextUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSelectionChanged(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnContextMenu(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnChangeFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBtnClose(wxCommandEvent& event) { event.Skip(); }

public:
    wxSearchCtrl* GetSearchCtrlFilter() { return m_searchCtrlFilter; }
    wxButton* GetButtonPrevious() { return m_buttonPrevious; }
    wxButton* GetButtonNext() { return m_buttonNext; }
    wxComboBox* GetComboExtraArgs() { return m_comboExtraArgs; }
    wxCheckBox* GetCheckBoxIgnoreCase() { return m_checkBoxIgnoreCase; }
    clThemedListCtrl* GetDvListCtrlCommitList() { return m_dvListCtrlCommitList; }
    wxPanel* GetSplitterPage781() { return m_splitterPage781; }
    wxStaticText* GetStaticText210() { return m_staticText210; }
    wxListBox* GetFileListBox() { return m_fileListBox; }
    wxPanel* GetSplitterPage795() { return m_splitterPage795; }
    wxStaticText* GetStaticText220() { return m_staticText220; }
    clThemedSTC* GetStcCommitMessage() { return m_stcCommitMessage; }
    wxPanel* GetSplitterPage799() { return m_splitterPage799; }
    clThemedSplitterWindow* GetSplitter791() { return m_splitter791; }
    wxPanel* GetSplitterPage785() { return m_splitterPage785; }
    clThemedSplitterWindow* GetSplitter777() { return m_splitter777; }
    wxPanel* GetSplitterPage178() { return m_splitterPage178; }
    wxStaticText* GetStaticText217() { return m_staticText217; }
    clThemedSTC* GetStcDiff() { return m_stcDiff; }
    wxPanel* GetSplitterPage182() { return m_splitterPage182; }
    clThemedSplitterWindow* GetSplitter174() { return m_splitter174; }
    wxButton* GetButtonClose() { return m_buttonClose; }
    wxPanel* GetPanel806() { return m_panel806; }
    GitCommitListDlgBase(wxWindow* parent,
                         wxWindowID id = wxID_ANY,
                         const wxString& title = _("Commit List"),
                         const wxPoint& pos = wxDefaultPosition,
                         const wxSize& size = wxSize(-1, -1),
                         long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER | wxMAXIMIZE_BOX);
    virtual ~GitCommitListDlgBase();
};

class GitDiffDlgBase : public wxDialog
{
protected:
    wxSplitterWindow* m_splitter;
    wxPanel* m_splitterPageFiles;
    wxStaticText* m_staticText68;
    wxListBox* m_fileListBox;
    wxPanel* m_splitterPageDiff;
    wxStaticText* m_staticText66;
    GitCommitEditor* m_editor;
    wxRadioBox* m_radioBoxStaged;
    wxCheckBox* m_checkIgnoreSpace;
    wxButton* m_buttonDiffDlg;
    wxButton* m_button773;

protected:
    virtual void OnChangeFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptionsChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnChoseCommits(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText68() { return m_staticText68; }
    wxListBox* GetFileListBox() { return m_fileListBox; }
    wxPanel* GetSplitterPageFiles() { return m_splitterPageFiles; }
    wxStaticText* GetStaticText66() { return m_staticText66; }
    GitCommitEditor* GetEditor() { return m_editor; }
    wxPanel* GetSplitterPageDiff() { return m_splitterPageDiff; }
    wxSplitterWindow* GetSplitter() { return m_splitter; }
    wxRadioBox* GetRadioBoxStaged() { return m_radioBoxStaged; }
    wxCheckBox* GetCheckIgnoreSpace() { return m_checkIgnoreSpace; }
    wxButton* GetButtonDiffDlg() { return m_buttonDiffDlg; }
    wxButton* GetButton773() { return m_button773; }
    GitDiffDlgBase(wxWindow* parent,
                   wxWindowID id = wxID_ANY,
                   const wxString& title = _("Current Diffs"),
                   const wxPoint& pos = wxDefaultPosition,
                   const wxSize& size = wxSize(-1, -1),
                   long style = wxCAPTION | wxRESIZE_BORDER | wxMAXIMIZE_BOX | wxMINIMIZE_BOX | wxCLOSE_BOX);
    virtual ~GitDiffDlgBase();
};

class GitDiffChooseCommitishDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText59825;
    wxStaticText* m_staticText598;
    wxRadioButton* m_radioBranch1;
    wxChoice* m_choiceBranch1;
    wxRadioButton* m_radioTag1;
    wxChoice* m_choiceTag1;
    wxRadioButton* m_radioCommit1;
    wxChoice* m_choiceCommit1;
    wxRadioButton* m_radioUserEntered1;
    wxComboBox* m_comboCommitish1;
    wxRadioButton* m_radioBranch2;
    wxChoice* m_choiceBranch2;
    wxRadioButton* m_radioTag2;
    wxChoice* m_choiceTag2;
    wxRadioButton* m_radioCommit2;
    wxChoice* m_choiceCommit2;
    wxRadioButton* m_radioUserEntered2;
    wxComboBox* m_comboCommitish2;
    wxCheckBox* m_checkTripleDot;
    wxTextCtrl* m_textFirst;
    wxStaticText* m_staticText598211;
    wxSpinCtrl* m_spinCtrl1;
    wxTextCtrl* m_textSecond;
    wxStaticText* m_staticText59821124;
    wxSpinCtrl* m_spinCtrl2;
    wxStdDialogButtonSizer* m_stdBtnSizer429;
    wxButton* m_button431;
    wxButton* m_button433;

protected:
    virtual void OnRadioBranch1Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUIBranch1(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnBranch1Changed(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRadioTag1Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUITags1(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRadioCommit1Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUICommit1(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRadioUser1Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUICommitish1(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRadioBranch2Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUIBranch2(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRadioTag2Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUITags2(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRadioCommit2Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUICommit2(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRadioUser2Selected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUICommitish2(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnTextFirstUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnTextSecondUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText59825() { return m_staticText59825; }
    wxStaticText* GetStaticText598() { return m_staticText598; }
    wxRadioButton* GetRadioBranch1() { return m_radioBranch1; }
    wxChoice* GetChoiceBranch1() { return m_choiceBranch1; }
    wxRadioButton* GetRadioTag1() { return m_radioTag1; }
    wxChoice* GetChoiceTag1() { return m_choiceTag1; }
    wxRadioButton* GetRadioCommit1() { return m_radioCommit1; }
    wxChoice* GetChoiceCommit1() { return m_choiceCommit1; }
    wxRadioButton* GetRadioUserEntered1() { return m_radioUserEntered1; }
    wxComboBox* GetComboCommitish1() { return m_comboCommitish1; }
    wxRadioButton* GetRadioBranch2() { return m_radioBranch2; }
    wxChoice* GetChoiceBranch2() { return m_choiceBranch2; }
    wxRadioButton* GetRadioTag2() { return m_radioTag2; }
    wxChoice* GetChoiceTag2() { return m_choiceTag2; }
    wxRadioButton* GetRadioCommit2() { return m_radioCommit2; }
    wxChoice* GetChoiceCommit2() { return m_choiceCommit2; }
    wxRadioButton* GetRadioUserEntered2() { return m_radioUserEntered2; }
    wxComboBox* GetComboCommitish2() { return m_comboCommitish2; }
    wxCheckBox* GetCheckTripleDot() { return m_checkTripleDot; }
    wxTextCtrl* GetTextFirst() { return m_textFirst; }
    wxStaticText* GetStaticText598211() { return m_staticText598211; }
    wxSpinCtrl* GetSpinCtrl1() { return m_spinCtrl1; }
    wxTextCtrl* GetTextSecond() { return m_textSecond; }
    wxStaticText* GetStaticText59821124() { return m_staticText59821124; }
    wxSpinCtrl* GetSpinCtrl2() { return m_spinCtrl2; }
    GitDiffChooseCommitishDlgBase(wxWindow* parent,
                                  wxWindowID id = wxID_ANY,
                                  const wxString& title = _("Select Commits to Diff"),
                                  const wxPoint& pos = wxDefaultPosition,
                                  const wxSize& size = wxSize(-1, -1),
                                  long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~GitDiffChooseCommitishDlgBase();
};

class gitCloneDlgBaseClass : public wxDialog
{
protected:
    wxStaticText* m_staticText22;
    wxTextCtrl* m_textCtrlURL;
    wxStaticText* m_staticText24;
    wxDirPickerCtrl* m_dirPickerTargetDir;
    wxStdDialogButtonSizer* m_stdBtnSizer294;
    wxButton* m_buttonOk;
    wxButton* m_buttonCancel;

protected:
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText22() { return m_staticText22; }
    wxTextCtrl* GetTextCtrlURL() { return m_textCtrlURL; }
    wxStaticText* GetStaticText24() { return m_staticText24; }
    wxDirPickerCtrl* GetDirPickerTargetDir() { return m_dirPickerTargetDir; }
    gitCloneDlgBaseClass(wxWindow* parent,
                         wxWindowID id = wxID_ANY,
                         const wxString& title = _("git clone.."),
                         const wxPoint& pos = wxDefaultPosition,
                         const wxSize& size = wxSize(-1, -1),
                         long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~gitCloneDlgBaseClass();
};

class GitFileDiffDlgBase : public wxDialog
{
protected:
    GitCommitEditor* m_editor;
    wxStdDialogButtonSizer* m_stdBtnSizer306;
    wxButton* m_button308;
    wxButton* m_button310;

protected:
    virtual void OnCloseDialog(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSaveAsPatch(wxCommandEvent& event) { event.Skip(); }

public:
    GitCommitEditor* GetEditor() { return m_editor; }
    GitFileDiffDlgBase(wxWindow* parent,
                       wxWindowID id = wxID_ANY,
                       const wxString& title = _("File diff"),
                       const wxPoint& pos = wxDefaultPosition,
                       const wxSize& size = wxSize(-1, -1),
                       long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~GitFileDiffDlgBase();
};

class GitApplyPatchDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText164;
    wxFilePickerCtrl* m_filePickerPatchFile;
    wxStaticText* m_staticText168;
    wxTextCtrl* m_textCtrlExtraFlags;
    wxStdDialogButtonSizer* m_stdBtnSizer300;
    wxButton* m_buttonCancel;
    wxButton* m_buttonOK;

protected:
public:
    wxStaticText* GetStaticText164() { return m_staticText164; }
    wxFilePickerCtrl* GetFilePickerPatchFile() { return m_filePickerPatchFile; }
    wxStaticText* GetStaticText168() { return m_staticText168; }
    wxTextCtrl* GetTextCtrlExtraFlags() { return m_textCtrlExtraFlags; }
    GitApplyPatchDlgBase(wxWindow* parent,
                         wxWindowID id = wxID_ANY,
                         const wxString& title = _("Git Apply Patch"),
                         const wxPoint& pos = wxDefaultPosition,
                         const wxSize& size = wxSize(-1, -1),
                         long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~GitApplyPatchDlgBase();
};

class GitConsoleBase : public wxPanel
{
protected:
    wxNotebook* m_notebookChanges;
    wxPanel* m_panel674;
    clThemedOrderedListCtrl* m_dvListCtrl;
    wxPanel* m_panelUnversioned;
    clThemedOrderedListCtrl* m_dvListCtrlUnversioned;
    wxPanel* m_panel_log;
    wxAuiToolBar* m_toolbar;

protected:
    virtual void OnContextMenu(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnFileActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUnversionedFileActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnUnversionedFileContextMenu(wxDataViewEvent& event) { event.Skip(); }

public:
    clThemedOrderedListCtrl* GetDvListCtrl() { return m_dvListCtrl; }
    wxPanel* GetPanel674() { return m_panel674; }
    clThemedOrderedListCtrl* GetDvListCtrlUnversioned() { return m_dvListCtrlUnversioned; }
    wxPanel* GetPanelUnversioned() { return m_panelUnversioned; }
    wxPanel* GetPanel_log() { return m_panel_log; }
    wxNotebook* GetNotebookChanges() { return m_notebookChanges; }
    wxAuiToolBar* GetToolbar() { return m_toolbar; }
    GitConsoleBase(wxWindow* parent,
                   wxWindowID id = wxID_ANY,
                   const wxPoint& pos = wxDefaultPosition,
                   const wxSize& size = wxSize(500, 300),
                   long style = wxTAB_TRAVERSAL);
    virtual ~GitConsoleBase();
};

class GitBlameSettingsDlgBase : public wxDialog
{
protected:
    wxCheckBox* m_checkParentCommit;
    wxCheckBox* m_checkShowLogControls;
    wxStdDialogButtonSizer* m_stdBtnSizer429;
    wxButton* m_button431;
    wxButton* m_button433;

protected:
public:
    wxCheckBox* GetCheckParentCommit() { return m_checkParentCommit; }
    wxCheckBox* GetCheckShowLogControls() { return m_checkShowLogControls; }
    GitBlameSettingsDlgBase(wxWindow* parent,
                            wxWindowID id = wxID_ANY,
                            const wxString& title = _("Git Blame Settings"),
                            const wxPoint& pos = wxDefaultPosition,
                            const wxSize& size = wxSize(-1, -1),
                            long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~GitBlameSettingsDlgBase();
};

class GitResetDlgBase : public wxDialog
{
protected:
    wxPanel* m_panel759;
    wxStaticText* m_staticText585;
    wxStaticText* m_staticText581;
    clToolBar* m_clToolbarAltered;
    wxCheckListBox* m_checkListBoxChanged;
    wxStaticText* m_staticText5815;
    clToolBar* m_clToolbarAdded;
    wxCheckListBox* m_checkListBoxNew;
    wxStdDialogButtonSizer* m_stdBtnSizer751;
    wxButton* m_button753;
    wxButton* m_button755;

protected:
public:
    wxStaticText* GetStaticText585() { return m_staticText585; }
    wxStaticText* GetStaticText581() { return m_staticText581; }
    clToolBar* GetClToolbarAltered() { return m_clToolbarAltered; }
    wxCheckListBox* GetCheckListBoxChanged() { return m_checkListBoxChanged; }
    wxStaticText* GetStaticText5815() { return m_staticText5815; }
    clToolBar* GetClToolbarAdded() { return m_clToolbarAdded; }
    wxCheckListBox* GetCheckListBoxNew() { return m_checkListBoxNew; }
    wxPanel* GetPanel759() { return m_panel759; }
    GitResetDlgBase(wxWindow* parent,
                    wxWindowID id = wxID_ANY,
                    const wxString& title = _("Git Reset Files"),
                    const wxPoint& pos = wxDefaultPosition,
                    const wxSize& size = wxSize(-1, -1),
                    long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER | wxMAXIMIZE_BOX);
    virtual ~GitResetDlgBase();
};

class GitUserEmailDialogBase : public wxDialog
{
protected:
    wxStaticText* m_staticText704;
    wxStaticText* m_staticText696;
    wxTextCtrl* m_textCtrlName;
    wxStaticText* m_staticText700;
    wxTextCtrl* m_textCtrlEmail;
    wxStdDialogButtonSizer* m_stdBtnSizer688;
    wxButton* m_button690;
    wxButton* m_button692;

protected:
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText704() { return m_staticText704; }
    wxStaticText* GetStaticText696() { return m_staticText696; }
    wxTextCtrl* GetTextCtrlName() { return m_textCtrlName; }
    wxStaticText* GetStaticText700() { return m_staticText700; }
    wxTextCtrl* GetTextCtrlEmail() { return m_textCtrlEmail; }
    GitUserEmailDialogBase(wxWindow* parent,
                           wxWindowID id = wxID_ANY,
                           const wxString& title = _("Git User"),
                           const wxPoint& pos = wxDefaultPosition,
                           const wxSize& size = wxSize(-1, -1),
                           long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~GitUserEmailDialogBase();
};

class GitReleaseNotesGenerationBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_;
    wxTextCtrl* m_textCtrlFirstCommit;
    wxStaticText* m_staticText839;
    wxTextCtrl* m_textCtrlSecondCommit;
    wxStaticText* m_staticText841;
    wxChoice* m_choiceProviders;
    wxStaticText* m_staticText843;
    wxSpinCtrl* m_spinCtrlLimitTokens;
    wxCheckBox* m_checkBoxOneLine;
    wxStdDialogButtonSizer* m_stdBtnSizer832;
    wxButton* m_buttonOk;
    wxButton* m_buttonCancel;

protected:
    virtual void OnChoiceProvidersUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnChoiceProviders(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonokUpdateUi(wxUpdateUIEvent& event) { event.Skip(); }

public:
    wxStaticText* Get() { return m_; }
    wxTextCtrl* GetTextCtrlFirstCommit() { return m_textCtrlFirstCommit; }
    wxStaticText* GetStaticText839() { return m_staticText839; }
    wxTextCtrl* GetTextCtrlSecondCommit() { return m_textCtrlSecondCommit; }
    wxStaticText* GetStaticText841() { return m_staticText841; }
    wxChoice* GetChoiceProviders() { return m_choiceProviders; }
    wxStaticText* GetStaticText843() { return m_staticText843; }
    wxSpinCtrl* GetSpinCtrlLimitTokens() { return m_spinCtrlLimitTokens; }
    wxCheckBox* GetCheckBoxOneLine() { return m_checkBoxOneLine; }
    GitReleaseNotesGenerationBaseDlg(wxWindow* parent,
                                     wxWindowID id = wxID_ANY,
                                     const wxString& title = _("Generate Release Notes"),
                                     const wxPoint& pos = wxDefaultPosition,
                                     const wxSize& size = wxSize(-1, -1),
                                     long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~GitReleaseNotesGenerationBaseDlg();
};

#endif
