//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: phplintdlg.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "phplintdlgbase.h"


// Declare the bitmap loading function
extern void wxCrafterGgLOZbInitBitmapResources();

static bool bBitmapLoaded = false;


PHPLintBaseDlg::PHPLintBaseDlg(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterGgLOZbInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* bSizerMain = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(bSizerMain);
    
    m_notebook = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxBK_DEFAULT);
    m_notebook->SetName(wxT("m_notebook"));
    
    bSizerMain->Add(m_notebook, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panelGeneral = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_notebook, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_notebook->AddPage(m_panelGeneral, _("General"), true);
    
    wxBoxSizer* boxSizer1 = new wxBoxSizer(wxVERTICAL);
    m_panelGeneral->SetSizer(boxSizer1);
    
    wxFlexGridSizer* flexGridSizer1 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer1->SetFlexibleDirection( wxBOTH );
    flexGridSizer1->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer1->AddGrowableCol(1);
    
    boxSizer1->Add(flexGridSizer1, 1, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    m_checkBoxLintOnLoad = new wxCheckBox(m_panelGeneral, wxID_ANY, _("Lint on file load"), wxDefaultPosition, wxDLG_UNIT(m_panelGeneral, wxSize(-1,-1)), 0);
    m_checkBoxLintOnLoad->SetValue(false);
    m_checkBoxLintOnLoad->SetToolTip(_("When saving a file, automatically lint it"));
    
    flexGridSizer1->Add(m_checkBoxLintOnLoad, 0, wxALL|wxALIGN_RIGHT, WXC_FROM_DIP(5));
    
    m_checkBoxLintOnSave = new wxCheckBox(m_panelGeneral, wxID_ANY, _("Lint on file save"), wxDefaultPosition, wxDLG_UNIT(m_panelGeneral, wxSize(-1,-1)), 0);
    m_checkBoxLintOnSave->SetValue(false);
    m_checkBoxLintOnSave->SetToolTip(_("When saving a file, automatically lint it"));
    
    flexGridSizer1->Add(m_checkBoxLintOnSave, 0, wxALL|wxALIGN_LEFT, WXC_FROM_DIP(5));
    
    m_panelPhpcs = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_notebook, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_notebook->AddPage(m_panelPhpcs, _("Code Sniffer"), false);
    
    wxBoxSizer* boxSizer2 = new wxBoxSizer(wxVERTICAL);
    m_panelPhpcs->SetSizer(boxSizer2);
    
    wxFlexGridSizer* flexGridSizer2 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer2->SetFlexibleDirection( wxBOTH );
    flexGridSizer2->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer2->AddGrowableCol(1);
    
    boxSizer2->Add(flexGridSizer2, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText2 = new wxStaticText(m_panelPhpcs, wxID_ANY, _("PHPCS:"), wxDefaultPosition, wxDLG_UNIT(m_panelPhpcs, wxSize(-1,-1)), 0);
    
    flexGridSizer2->Add(m_staticText2, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    m_filePickerPhpcsPhar = new wxFilePickerCtrl(m_panelPhpcs, wxID_ANY, wxEmptyString, _("Select a file"), wxT("*"), wxDefaultPosition, wxDLG_UNIT(m_panelPhpcs, wxSize(-1,-1)), wxFLP_USE_TEXTCTRL|wxFLP_SMALL);
    m_filePickerPhpcsPhar->SetToolTip(_("Select the PHP_CodeSniffer phar file location"));
    
    flexGridSizer2->Add(m_filePickerPhpcsPhar, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panelPhpmd = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_notebook, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_notebook->AddPage(m_panelPhpmd, _("Mess Detector"), false);
    
    wxBoxSizer* boxSizer3 = new wxBoxSizer(wxVERTICAL);
    m_panelPhpmd->SetSizer(boxSizer3);
    
    wxFlexGridSizer* flexGridSizer3 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer3->SetFlexibleDirection( wxBOTH );
    flexGridSizer3->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer3->AddGrowableCol(1);
    
    boxSizer3->Add(flexGridSizer3, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText3 = new wxStaticText(m_panelPhpmd, wxID_ANY, _("PHPMD:"), wxDefaultPosition, wxDLG_UNIT(m_panelPhpmd, wxSize(-1,-1)), 0);
    
    flexGridSizer3->Add(m_staticText3, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    m_filePickerPhpmdPhar = new wxFilePickerCtrl(m_panelPhpmd, wxID_ANY, wxEmptyString, _("Select a file"), wxT("*"), wxDefaultPosition, wxDLG_UNIT(m_panelPhpmd, wxSize(-1,-1)), wxFLP_USE_TEXTCTRL|wxFLP_SMALL);
    m_filePickerPhpmdPhar->SetToolTip(_("Select the PHPMD phar file location"));
    
    flexGridSizer3->Add(m_filePickerPhpmdPhar, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText4 = new wxStaticText(m_panelPhpmd, wxID_ANY, _("PHPMD-rules:"), wxDefaultPosition, wxDLG_UNIT(m_panelPhpmd, wxSize(-1,-1)), 0);
    
    flexGridSizer3->Add(m_staticText4, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    m_filePickerPhpmdRules = new wxFilePickerCtrl(m_panelPhpmd, wxID_ANY, wxEmptyString, _("Select a file"), wxT("*.xml"), wxDefaultPosition, wxDLG_UNIT(m_panelPhpmd, wxSize(-1,-1)), wxFLP_USE_TEXTCTRL|wxFLP_SMALL);
    m_filePickerPhpmdRules->SetToolTip(_("Select the xml rules file to use with PHPMD"));
    
    flexGridSizer3->Add(m_filePickerPhpmdRules, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxBoxSizer* bSizerButtons = new wxBoxSizer(wxHORIZONTAL);
    
    bSizerMain->Add(bSizerButtons, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, WXC_FROM_DIP(5));
    
    m_stdBtnSizer = new wxStdDialogButtonSizer();
    
    bSizerButtons->Add(m_stdBtnSizer, 0, wxALL, WXC_FROM_DIP(5));
    
    m_buttonOK = new wxButton(this, wxID_OK, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_buttonOK->SetDefault();
    m_stdBtnSizer->AddButton(m_buttonOK);
    
    m_buttonCancel = new wxButton(this, wxID_CANCEL, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer->AddButton(m_buttonCancel);
    m_stdBtnSizer->Realize();
    
    
    #if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(m_notebook)){
        wxPersistenceManager::Get().RegisterAndRestore(m_notebook);
    } else {
        wxPersistenceManager::Get().Restore(m_notebook);
    }
    #endif
    
    SetName(wxT("PHPLintBaseDlg"));
    SetSize(-1,-1);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

PHPLintBaseDlg::~PHPLintBaseDlg()
{
}
