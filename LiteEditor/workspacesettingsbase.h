//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: workspacesettingsbase.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_LITEEDITOR_WORKSPACESETTINGSBASE_BASE_CLASSES_H
#define CODELITE_LITEEDITOR_WORKSPACESETTINGSBASE_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/notebook.h>
#include <wx/panel.h>
#include <wx/imaglist.h>
#include <wx/statbox.h>
#include <wx/stattext.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/statline.h>
#include <wx/textctrl.h>
#include <wx/button.h>
#include <wx/splitter.h>
#include <wx/checkbox.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

class WorkspaceSettingsBase : public wxDialog
{
protected:
    wxNotebook* m_notebook1;
    wxPanel* m_panelEnv;
    wxStaticText* m_staticText3;
    wxStaticText* m_staticText4;
    wxChoice* m_choiceEnvSets;
    wxStaticLine* m_staticline2;
    wxStaticText* m_staticText6;
    wxTextCtrl* m_textCtrlWspEnvVars;
    wxStaticLine* m_staticline1;
    wxButton* m_buttonOk;
    wxButton* m_buttonCancel;

protected:
    virtual void OnEnvSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonOK(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText3() { return m_staticText3; }
    wxStaticText* GetStaticText4() { return m_staticText4; }
    wxChoice* GetChoiceEnvSets() { return m_choiceEnvSets; }
    wxStaticLine* GetStaticline2() { return m_staticline2; }
    wxStaticText* GetStaticText6() { return m_staticText6; }
    wxTextCtrl* GetTextCtrlWspEnvVars() { return m_textCtrlWspEnvVars; }
    wxPanel* GetPanelEnv() { return m_panelEnv; }
    wxNotebook* GetNotebook1() { return m_notebook1; }
    wxStaticLine* GetStaticline1() { return m_staticline1; }
    wxButton* GetButtonOk() { return m_buttonOk; }
    wxButton* GetButtonCancel() { return m_buttonCancel; }
    WorkspaceSettingsBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Workspace Settings"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~WorkspaceSettingsBase();
};


class CodeCompletionBasePage : public wxPanel
{
protected:
    wxSplitterWindow* m_splitter1;
    wxPanel* m_panel8;
    wxStaticText* m_staticText5;
    wxTextCtrl* m_textCtrlSearchPaths;
    wxPanel* m_panel6;
    wxStaticText* m_staticText12;
    wxTextCtrl* m_textCtrlMacros;
    wxCheckBox* m_checkBoxCpp11;
    wxCheckBox* m_checkBoxCpp14;
    wxCheckBox* m_checkBoxCpp17;
    wxCheckBox* m_checkBoxSWTLW;

protected:
    virtual void OnCCContentModified(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText5() { return m_staticText5; }
    wxTextCtrl* GetTextCtrlSearchPaths() { return m_textCtrlSearchPaths; }
    wxPanel* GetPanel8() { return m_panel8; }
    wxStaticText* GetStaticText12() { return m_staticText12; }
    wxTextCtrl* GetTextCtrlMacros() { return m_textCtrlMacros; }
    wxCheckBox* GetCheckBoxCpp11() { return m_checkBoxCpp11; }
    wxCheckBox* GetCheckBoxCpp14() { return m_checkBoxCpp14; }
    wxCheckBox* GetCheckBoxCpp17() { return m_checkBoxCpp17; }
    wxCheckBox* GetCheckBoxSWTLW() { return m_checkBoxSWTLW; }
    wxPanel* GetPanel6() { return m_panel6; }
    wxSplitterWindow* GetSplitter1() { return m_splitter1; }
    CodeCompletionBasePage(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~CodeCompletionBasePage();
};

#endif
