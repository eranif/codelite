//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// Copyright            : (C) 2015 Eran Ifrah
// File name            : unittestreport.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: unittestreport.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef CODELITE_UNITTESTCPP_UNITTESTREPORT_BASE_CLASSES_H
#define CODELITE_UNITTESTCPP_UNITTESTREPORT_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/panel.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stattext.h>
#include "progressctrl.h"
#include <wx/button.h>
#include <wx/dataview.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

class UnitTestsBasePage : public wxPanel
{
protected:
    wxStaticText* m_staticText7;
    ProgressCtrl* m_progressPassed;
    wxStaticText* m_staticText8;
    ProgressCtrl* m_progressFailed;
    wxButton* m_button4;
    wxStaticText* m_staticText10;
    wxStaticText* m_staticTextTotalTests;
    wxStaticText* m_staticText12;
    wxStaticText* m_staticTextFailTestsNum;
    wxStaticText* m_staticText14;
    wxStaticText* m_staticTextSuccessTestsNum;
    wxDataViewListCtrl* m_dvListCtrlErrors;

protected:
    virtual void OnClearReport(wxCommandEvent& event) { event.Skip(); }
    virtual void OnItemActivated(wxDataViewEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText7() { return m_staticText7; }
    ProgressCtrl* GetProgressPassed() { return m_progressPassed; }
    wxStaticText* GetStaticText8() { return m_staticText8; }
    ProgressCtrl* GetProgressFailed() { return m_progressFailed; }
    wxButton* GetButton4() { return m_button4; }
    wxStaticText* GetStaticText10() { return m_staticText10; }
    wxStaticText* GetStaticTextTotalTests() { return m_staticTextTotalTests; }
    wxStaticText* GetStaticText12() { return m_staticText12; }
    wxStaticText* GetStaticTextFailTestsNum() { return m_staticTextFailTestsNum; }
    wxStaticText* GetStaticText14() { return m_staticText14; }
    wxStaticText* GetStaticTextSuccessTestsNum() { return m_staticTextSuccessTestsNum; }
    wxDataViewListCtrl* GetDvListCtrlErrors() { return m_dvListCtrlErrors; }
    UnitTestsBasePage(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~UnitTestsBasePage();
};

#endif
